{
	"id": "481b7920bd6e2f80cc9977a74aa85d0a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stake.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.8.21;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\n/**\n * @title StakingPool\n * @dev A smart contract for staking tokens with flexible or fixed staking periods\n * @dev Users can stake tokens, withdraw, and claim rewards based on the staking duration\n */\ncontract StakingPool is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    // Staking-related variables\n    IERC20 public stakingToken;\n    uint256 public totalStaked;\n    mapping(address => uint256) public stakedBalances;\n    mapping(address => uint256) public lastStakeTimestamp;\n    uint256 public rewardRate; // Reward rate per second\n    uint256 public lastRewardTimestamp;\n\n    // Staking periods with options: flexible, one week, two weeks, up to a maximum of sixty days\n    uint256 constant FLEXIBLE_STAKING_PERIOD = 0;\n    uint256 constant ONE_WEEK_STAKING_PERIOD = 1 weeks;\n    uint256 constant TWO_WEEKS_STAKING_PERIOD = 2 weeks;\n    uint256 constant MAX_STAKING_PERIOD = 60 days;\n\n    // Set of supported staking periods\n    EnumerableSet.UintSet private supportedStakingPeriods;\n\n    // Events for tracking staking actions\n    event Staked(address indexed user, uint256 amount, uint256 stakingPeriod);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 amount);\n\n    /**\n     * @dev Constructor to initialize the StakingPool contract\n     * @param _stakingToken Address of the staking token\n     * @param _rewardRate Reward rate per second for staking\n     * @param _initialOwner Address of the initial owner (used by Ownable)\n     */\n    constructor(address _stakingToken, uint256 _rewardRate, address _initialOwner) Ownable(_initialOwner) {\n        stakingToken = IERC20(_stakingToken);\n        rewardRate = _rewardRate;\n        lastRewardTimestamp = block.timestamp;\n\n        // Initialize supported staking periods\n        supportedStakingPeriods.add(FLEXIBLE_STAKING_PERIOD);\n        supportedStakingPeriods.add(ONE_WEEK_STAKING_PERIOD);\n        supportedStakingPeriods.add(TWO_WEEKS_STAKING_PERIOD);\n        supportedStakingPeriods.add(MAX_STAKING_PERIOD);\n    }\n\n    /**\n     * @dev Function to allow users to stake tokens with a specific staking period\n     * @param amount Amount of tokens to stake\n     * @param stakingPeriod Desired staking period identifier\n     */\n    function stake(uint256 amount, uint256 stakingPeriod) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(supportedStakingPeriods.contains(stakingPeriod), \"Invalid staking period\");\n        \n        updateReward(msg.sender);\n        \n        stakingToken.transferFrom(msg.sender, address(this), amount);\n        stakedBalances[msg.sender] += amount;\n        totalStaked += amount;\n        lastStakeTimestamp[msg.sender] = block.timestamp;\n\n        emit Staked(msg.sender, amount, stakingPeriod);\n    }\n\n    /**\n     * @dev Function to allow users to withdraw their staked tokens\n     * @param amount Amount of tokens to withdraw\n     */\n    function withdraw(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        updateReward(msg.sender);\n\n        stakedBalances[msg.sender] -= amount;\n        totalStaked -= amount;\n        stakingToken.transfer(msg.sender, amount);\n\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /**\n     * @dev Function to allow users to claim rewards based on their staking duration\n     */\n    function claimReward() external nonReentrant {\n        updateReward(msg.sender);\n        uint256 reward = calculateReward(msg.sender);\n\n        if (reward > 0) {\n            stakingToken.transfer(msg.sender, reward);\n            emit RewardClaimed(msg.sender, reward);\n        }\n    }\n\n   /**\n * @dev Update the reward for a given account.\n * @param account The address of the account for which the reward is updated.\n */\nfunction updateReward(address account) internal {\n    // Function logic that doesn't use 'account'\n    // ...\n\n    if (block.timestamp > lastRewardTimestamp) {\n        uint256 elapsedSeconds = block.timestamp - lastRewardTimestamp;\n        uint256 reward = totalStaked * elapsedSeconds * rewardRate;\n\n        stakingToken.transferFrom(owner(), address(this), reward);\n        lastRewardTimestamp = block.timestamp;\n    }\n}\n\n\n    /**\n     * @dev Function to calculate the pending reward for a user\n     * @param account User's address\n     * @return Pending reward amount\n     */\n    function calculateReward(address account) public view returns (uint256) {\n        uint256 elapsedSeconds = block.timestamp - lastStakeTimestamp[account];\n        return stakedBalances[account] * elapsedSeconds * rewardRate;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    /**\n     * @dev Multiplies two numbers, throws on overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Integer division of two numbers, truncating the quotient.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        return c;\n    }\n\n    /**\n     * @dev Subtracts two numbers, throws on overflow (i.e., if subtrahend is greater than minuend).\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n        return c;\n    }\n\n    /**\n     * @dev Adds two numbers, throws on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two numbers, reverting with custom message on division by zero.\n     */\n    function divRevertZero(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two numbers.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that throw on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":148:1852  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":148:1852  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220338385f5d92c047457a17c9f15ce3b44aad1b6b1cc31abdb50c2ee6189e0d4b464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220338385f5d92c047457a17c9f15ce3b44aad1b6b1cc31abdb50c2ee6189e0d4b464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP4 DUP6 CREATE2 0xD9 0x2C DIV PUSH21 0x57A17C9F15CE3B44AAD1B6B1CC31ABDB50C2EE6189 0xE0 0xD4 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "148:1704:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220338385f5d92c047457a17c9f15ce3b44aad1b6b1cc31abdb50c2ee6189e0d4b464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP4 DUP6 CREATE2 0xD9 0x2C DIV PUSH21 0x57A17C9F15CE3B44AAD1B6B1CC31ABDB50C2EE6189 0xE0 0xD4 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "148:1704:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"divRevertZero(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1852,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220338385f5d92c047457a17c9f15ce3b44aad1b6b1cc31abdb50c2ee6189e0d4b464736f6c63430008140033",
									".code": [
										{
											"begin": 148,
											"end": 1852,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1852,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that throw on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xb56bff94b500e76832c09a320f2096dcbebbc6f0cd9e6d4eb3febe5a832b96dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69767c1207853fd65a3695375618e05b9bb12f49123b6ddb471f3ba6de9875b0\",\"dweb:/ipfs/QmNsRCx1Qgo6VGfLDAojRbiF1hfjQZ776JuMowHf46kgkX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220056a77989b7dd71639d36e901b74638f084e8521755cee337ff9a1df85af40ff64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220056a77989b7dd71639d36e901b74638f084e8521755cee337ff9a1df85af40ff64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH11 0x77989B7DD71639D36E901B PUSH21 0x638F084E8521755CEE337FF9A1DF85AF40FF64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220056a77989b7dd71639d36e901b74638f084e8521755cee337ff9a1df85af40ff64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH11 0x77989B7DD71639D36E901B PUSH21 0x638F084E8521755CEE337FF9A1DF85AF40FF64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220056a77989b7dd71639d36e901b74638f084e8521755cee337ff9a1df85af40ff64736f6c63430008140033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Stake.sol": {
				"StakingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakingPeriod",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastStakeTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingPeriod",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A smart contract for staking tokens with flexible or fixed staking periodsUsers can stake tokens, withdraw, and claim rewards based on the staking duration",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"calculateReward(address)": {
								"details": "Function to calculate the pending reward for a user",
								"params": {
									"account": "User's address"
								},
								"returns": {
									"_0": "Pending reward amount"
								}
							},
							"claimReward()": {
								"details": "Function to allow users to claim rewards based on their staking duration"
							},
							"constructor": {
								"details": "Constructor to initialize the StakingPool contract",
								"params": {
									"_initialOwner": "Address of the initial owner (used by Ownable)",
									"_rewardRate": "Reward rate per second for staking",
									"_stakingToken": "Address of the staking token"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256,uint256)": {
								"details": "Function to allow users to stake tokens with a specific staking period",
								"params": {
									"amount": "Amount of tokens to stake",
									"stakingPeriod": "Desired staking period identifier"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256)": {
								"details": "Function to allow users to withdraw their staked tokens",
								"params": {
									"amount": "Amount of tokens to withdraw"
								}
							}
						},
						"title": "StakingPool",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stake.sol\":565:5053  contract StakingPool is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stake.sol\":1943:2472  constructor(address _stakingToken, uint256 _rewardRate, address _initialOwner) Ownable(_initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Stake.sol\":2030:2043  _initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":2077:2090  _stakingToken */\n  dup3\n    /* \"contracts/Stake.sol\":2055:2067  stakingToken */\n  0x02\n  0x00\n    /* \"contracts/Stake.sol\":2055:2091  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":2114:2125  _rewardRate */\n  dup2\n    /* \"contracts/Stake.sol\":2101:2111  rewardRate */\n  0x06\n    /* \"contracts/Stake.sol\":2101:2125  rewardRate = _rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":2157:2172  block.timestamp */\n  timestamp\n    /* \"contracts/Stake.sol\":2135:2154  lastRewardTimestamp */\n  0x07\n    /* \"contracts/Stake.sol\":2135:2172  lastRewardTimestamp = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Stake.sol\":2231:2283  supportedStakingPeriods.add(FLEXIBLE_STAKING_PERIOD) */\n  tag_15\n    /* \"contracts/Stake.sol\":1154:1155  0 */\n  0x00\n    /* \"contracts/Stake.sol\":2231:2254  supportedStakingPeriods */\n  0x08\n    /* \"contracts/Stake.sol\":2231:2258  supportedStakingPeriods.add */\n  shl(0x20, tag_16)\n  swap1\n    /* \"contracts/Stake.sol\":2231:2283  supportedStakingPeriods.add(FLEXIBLE_STAKING_PERIOD) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/Stake.sol\":2293:2345  supportedStakingPeriods.add(ONE_WEEK_STAKING_PERIOD) */\n  tag_17\n    /* \"contracts/Stake.sol\":1204:1211  1 weeks */\n  0x093a80\n    /* \"contracts/Stake.sol\":2293:2316  supportedStakingPeriods */\n  0x08\n    /* \"contracts/Stake.sol\":2293:2320  supportedStakingPeriods.add */\n  shl(0x20, tag_16)\n  swap1\n    /* \"contracts/Stake.sol\":2293:2345  supportedStakingPeriods.add(ONE_WEEK_STAKING_PERIOD) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/Stake.sol\":2355:2408  supportedStakingPeriods.add(TWO_WEEKS_STAKING_PERIOD) */\n  tag_18\n    /* \"contracts/Stake.sol\":1261:1268  2 weeks */\n  0x127500\n    /* \"contracts/Stake.sol\":2355:2378  supportedStakingPeriods */\n  0x08\n    /* \"contracts/Stake.sol\":2355:2382  supportedStakingPeriods.add */\n  shl(0x20, tag_16)\n  swap1\n    /* \"contracts/Stake.sol\":2355:2408  supportedStakingPeriods.add(TWO_WEEKS_STAKING_PERIOD) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/Stake.sol\":2418:2465  supportedStakingPeriods.add(MAX_STAKING_PERIOD) */\n  tag_19\n    /* \"contracts/Stake.sol\":1312:1319  60 days */\n  0x4f1a00\n    /* \"contracts/Stake.sol\":2418:2441  supportedStakingPeriods */\n  0x08\n    /* \"contracts/Stake.sol\":2418:2445  supportedStakingPeriods.add */\n  shl(0x20, tag_16)\n  swap1\n    /* \"contracts/Stake.sol\":2418:2465  supportedStakingPeriods.add(MAX_STAKING_PERIOD) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/Stake.sol\":1943:2472  constructor(address _stakingToken, uint256 _rewardRate, address _initialOwner) Ownable(_initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Stake.sol\":565:5053  contract StakingPool is Ownable, ReentrancyGuard {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10804:10933  function add(UintSet storage set, uint256 value) internal returns (bool) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10871:10875  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10894:10926  _add(set._inner, bytes32(value)) */\n  tag_23\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10899:10902  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10899:10909  set._inner */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10919:10924  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10911:10925  bytes32(value) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10894:10898  _add */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10894:10926  _add(set._inner, bytes32(value)) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10887:10926  return _add(set._inner, bytes32(value)) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10804:10933  function add(UintSet storage set, uint256 value) internal returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n  tag_26\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n  dup3\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n  dup3\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n  0x01\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n  swap1\n  pop\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_25:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n  dup4\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n  0x01\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n  dup5\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n  eq\n  iszero\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_36:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_49\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_35\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_37:\n    /* \"#utility.yul\":641:665   */\n  tag_51\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_36\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_52:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_38:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_54\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_37\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_39:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_40:\n    /* \"#utility.yul\":1001:1025   */\n  tag_57\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_39\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_58:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_41:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_60\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_40\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_63\n  tag_33\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1326:1445   */\ntag_62:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_64\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_38\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_65\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_41\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_66\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_38\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_42:\n    /* \"#utility.yul\":1961:1985   */\n  tag_68\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_36\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_10:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_70\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_42\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Stake.sol\":565:5053  contract StakingPool is Ownable, ReentrancyGuard {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stake.sol\":565:5053  contract StakingPool is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf8077fae\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x1460fa87\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c42b233\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stake.sol\":801:850  mapping(address => uint256) public stakedBalances */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":856:909  mapping(address => uint256) public lastStakeTimestamp */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":3377:3710  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Stake.sol\":737:763  IERC20 public stakingToken */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":2686:3237  function stake(uint256 amount, uint256 stakingPeriod) external nonReentrant {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/Stake.sol\":915:940  uint256 public rewardRate */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":769:795  uint256 public totalStaked */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":3817:4101  function claimReward() external nonReentrant {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Stake.sol\":4822:5051  function calculateReward(address account) public view returns (uint256) {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/Stake.sol\":972:1006  uint256 public lastRewardTimestamp */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Stake.sol\":801:850  mapping(address => uint256) public stakedBalances */\n    tag_21:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stake.sol\":856:909  mapping(address => uint256) public lastStakeTimestamp */\n    tag_26:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Stake.sol\":3377:3710  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_65\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Stake.sol\":3460:3461  0 */\n      0x00\n        /* \"contracts/Stake.sol\":3451:3457  amount */\n      dup2\n        /* \"contracts/Stake.sol\":3451:3461  amount > 0 */\n      gt\n        /* \"contracts/Stake.sol\":3443:3495  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Stake.sol\":3505:3529  updateReward(msg.sender) */\n      tag_71\n        /* \"contracts/Stake.sol\":3518:3528  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3505:3517  updateReward */\n      tag_72\n        /* \"contracts/Stake.sol\":3505:3529  updateReward(msg.sender) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Stake.sol\":3570:3576  amount */\n      dup1\n        /* \"contracts/Stake.sol\":3540:3554  stakedBalances */\n      0x04\n        /* \"contracts/Stake.sol\":3540:3566  stakedBalances[msg.sender] */\n      0x00\n        /* \"contracts/Stake.sol\":3555:3565  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3540:3566  stakedBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stake.sol\":3540:3576  stakedBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":3601:3607  amount */\n      dup1\n        /* \"contracts/Stake.sol\":3586:3597  totalStaked */\n      0x03\n      0x00\n        /* \"contracts/Stake.sol\":3586:3607  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_75\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_75:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":3617:3629  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":3617:3638  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Stake.sol\":3639:3649  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3651:3657  amount */\n      dup4\n        /* \"contracts/Stake.sol\":3617:3658  stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/Stake.sol\":3684:3694  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3674:3703  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/Stake.sol\":3696:3702  amount */\n      dup3\n        /* \"contracts/Stake.sol\":3674:3703  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/Stake.sol\":3377:3710  function withdraw(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Stake.sol\":737:763  IERC20 public stakingToken */\n    tag_35:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Stake.sol\":2686:3237  function stake(uint256 amount, uint256 stakingPeriod) external nonReentrant {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Stake.sol\":2789:2790  0 */\n      0x00\n        /* \"contracts/Stake.sol\":2780:2786  amount */\n      dup3\n        /* \"contracts/Stake.sol\":2780:2790  amount > 0 */\n      gt\n        /* \"contracts/Stake.sol\":2772:2824  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_70\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/Stake.sol\":2842:2889  supportedStakingPeriods.contains(stakingPeriod) */\n      tag_96\n        /* \"contracts/Stake.sol\":2875:2888  stakingPeriod */\n      dup2\n        /* \"contracts/Stake.sol\":2842:2865  supportedStakingPeriods */\n      0x08\n        /* \"contracts/Stake.sol\":2842:2874  supportedStakingPeriods.contains */\n      tag_97\n      swap1\n        /* \"contracts/Stake.sol\":2842:2889  supportedStakingPeriods.contains(stakingPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/Stake.sol\":2834:2916  require(supportedStakingPeriods.contains(stakingPeriod), \"Invalid staking period\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/Stake.sol\":2935:2959  updateReward(msg.sender) */\n      tag_101\n        /* \"contracts/Stake.sol\":2948:2958  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":2935:2947  updateReward */\n      tag_72\n        /* \"contracts/Stake.sol\":2935:2959  updateReward(msg.sender) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Stake.sol\":2978:2990  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":2978:3003  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Stake.sol\":3004:3014  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3024:3028  this */\n      address\n        /* \"contracts/Stake.sol\":3031:3037  amount */\n      dup6\n        /* \"contracts/Stake.sol\":2978:3038  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_106:\n      pop\n        /* \"contracts/Stake.sol\":3078:3084  amount */\n      dup2\n        /* \"contracts/Stake.sol\":3048:3062  stakedBalances */\n      0x04\n        /* \"contracts/Stake.sol\":3048:3074  stakedBalances[msg.sender] */\n      0x00\n        /* \"contracts/Stake.sol\":3063:3073  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3048:3074  stakedBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Stake.sol\":3048:3084  stakedBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":3109:3115  amount */\n      dup2\n        /* \"contracts/Stake.sol\":3094:3105  totalStaked */\n      0x03\n      0x00\n        /* \"contracts/Stake.sol\":3094:3115  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":3158:3173  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":3125:3143  lastStakeTimestamp */\n      0x05\n        /* \"contracts/Stake.sol\":3125:3155  lastStakeTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/Stake.sol\":3144:3154  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3125:3155  lastStakeTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Stake.sol\":3125:3173  lastStakeTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":3196:3206  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3189:3230  Staked(msg.sender, amount, stakingPeriod) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/Stake.sol\":3208:3214  amount */\n      dup4\n        /* \"contracts/Stake.sol\":3216:3229  stakingPeriod */\n      dup4\n        /* \"contracts/Stake.sol\":3189:3230  Staked(msg.sender, amount, stakingPeriod) */\n      mload(0x40)\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Stake.sol\":2686:3237  function stake(uint256 amount, uint256 stakingPeriod) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":915:940  uint256 public rewardRate */\n    tag_43:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Stake.sol\":769:795  uint256 public totalStaked */\n    tag_46:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Stake.sol\":3817:4101  function claimReward() external nonReentrant {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_115\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Stake.sol\":3872:3896  updateReward(msg.sender) */\n      tag_117\n        /* \"contracts/Stake.sol\":3885:3895  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3872:3884  updateReward */\n      tag_72\n        /* \"contracts/Stake.sol\":3872:3896  updateReward(msg.sender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Stake.sol\":3906:3920  uint256 reward */\n      0x00\n        /* \"contracts/Stake.sol\":3923:3950  calculateReward(msg.sender) */\n      tag_118\n        /* \"contracts/Stake.sol\":3939:3949  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":3923:3938  calculateReward */\n      tag_56\n        /* \"contracts/Stake.sol\":3923:3950  calculateReward(msg.sender) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Stake.sol\":3906:3950  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":3974:3975  0 */\n      0x00\n        /* \"contracts/Stake.sol\":3965:3971  reward */\n      dup2\n        /* \"contracts/Stake.sol\":3965:3975  reward > 0 */\n      gt\n        /* \"contracts/Stake.sol\":3961:4095  if (reward > 0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/Stake.sol\":3991:4003  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":3991:4012  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Stake.sol\":4013:4023  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":4025:4031  reward */\n      dup4\n        /* \"contracts/Stake.sol\":3991:4032  stakingToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_123:\n      pop\n        /* \"contracts/Stake.sol\":4065:4075  msg.sender */\n      caller\n        /* \"contracts/Stake.sol\":4051:4084  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/Stake.sol\":4077:4083  reward */\n      dup3\n        /* \"contracts/Stake.sol\":4051:4084  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Stake.sol\":3961:4095  if (reward > 0) {... */\n    tag_119:\n        /* \"contracts/Stake.sol\":3862:4101  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Stake.sol\":3817:4101  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Stake.sol\":4822:5051  function calculateReward(address account) public view returns (uint256) {... */\n    tag_56:\n        /* \"contracts/Stake.sol\":4885:4892  uint256 */\n      0x00\n        /* \"contracts/Stake.sol\":4904:4926  uint256 elapsedSeconds */\n      dup1\n        /* \"contracts/Stake.sol\":4947:4965  lastStakeTimestamp */\n      0x05\n        /* \"contracts/Stake.sol\":4947:4974  lastStakeTimestamp[account] */\n      0x00\n        /* \"contracts/Stake.sol\":4966:4973  account */\n      dup5\n        /* \"contracts/Stake.sol\":4947:4974  lastStakeTimestamp[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stake.sol\":4929:4944  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":4929:4974  block.timestamp - lastStakeTimestamp[account] */\n      tag_127\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_127:\n        /* \"contracts/Stake.sol\":4904:4974  uint256 elapsedSeconds = block.timestamp - lastStakeTimestamp[account] */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":5034:5044  rewardRate */\n      sload(0x06)\n        /* \"contracts/Stake.sol\":5017:5031  elapsedSeconds */\n      dup2\n        /* \"contracts/Stake.sol\":4991:5005  stakedBalances */\n      0x04\n        /* \"contracts/Stake.sol\":4991:5014  stakedBalances[account] */\n      0x00\n        /* \"contracts/Stake.sol\":5006:5013  account */\n      dup7\n        /* \"contracts/Stake.sol\":4991:5014  stakedBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stake.sol\":4991:5031  stakedBalances[account] * elapsedSeconds */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/Stake.sol\":4991:5044  stakedBalances[account] * elapsedSeconds * rewardRate */\n      tag_130\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_130:\n        /* \"contracts/Stake.sol\":4984:5044  return stakedBalances[account] * elapsedSeconds * rewardRate */\n      swap2\n      pop\n      pop\n        /* \"contracts/Stake.sol\":4822:5051  function calculateReward(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Stake.sol\":972:1006  uint256 public lastRewardTimestamp */\n    tag_62:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/Stake.sol\":4239:4661  function updateReward(address account) internal {... */\n    tag_72:\n        /* \"contracts/Stake.sol\":4376:4395  lastRewardTimestamp */\n      sload(0x07)\n        /* \"contracts/Stake.sol\":4358:4373  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":4358:4395  block.timestamp > lastRewardTimestamp */\n      gt\n        /* \"contracts/Stake.sol\":4354:4659  if (block.timestamp > lastRewardTimestamp) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/Stake.sol\":4407:4429  uint256 elapsedSeconds */\n      0x00\n        /* \"contracts/Stake.sol\":4450:4469  lastRewardTimestamp */\n      sload(0x07)\n        /* \"contracts/Stake.sol\":4432:4447  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":4432:4469  block.timestamp - lastRewardTimestamp */\n      tag_141\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_141:\n        /* \"contracts/Stake.sol\":4407:4469  uint256 elapsedSeconds = block.timestamp - lastRewardTimestamp */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":4479:4493  uint256 reward */\n      0x00\n        /* \"contracts/Stake.sol\":4527:4537  rewardRate */\n      sload(0x06)\n        /* \"contracts/Stake.sol\":4510:4524  elapsedSeconds */\n      dup3\n        /* \"contracts/Stake.sol\":4496:4507  totalStaked */\n      sload(0x03)\n        /* \"contracts/Stake.sol\":4496:4524  totalStaked * elapsedSeconds */\n      tag_142\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_142:\n        /* \"contracts/Stake.sol\":4496:4537  totalStaked * elapsedSeconds * rewardRate */\n      tag_143\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_143:\n        /* \"contracts/Stake.sol\":4479:4537  uint256 reward = totalStaked * elapsedSeconds * rewardRate */\n      swap1\n      pop\n        /* \"contracts/Stake.sol\":4548:4560  stakingToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Stake.sol\":4548:4573  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Stake.sol\":4574:4581  owner() */\n      tag_144\n        /* \"contracts/Stake.sol\":4574:4579  owner */\n      tag_49\n        /* \"contracts/Stake.sol\":4574:4581  owner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Stake.sol\":4591:4595  this */\n      address\n        /* \"contracts/Stake.sol\":4598:4604  reward */\n      dup5\n        /* \"contracts/Stake.sol\":4548:4605  stakingToken.transferFrom(owner(), address(this), reward) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/Stake.sol\":4637:4652  block.timestamp */\n      timestamp\n        /* \"contracts/Stake.sol\":4615:4634  lastRewardTimestamp */\n      0x07\n        /* \"contracts/Stake.sol\":4615:4652  lastRewardTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Stake.sol\":4397:4659  {... */\n      pop\n      pop\n        /* \"contracts/Stake.sol\":4354:4659  if (block.timestamp > lastRewardTimestamp) {... */\n    tag_140:\n        /* \"contracts/Stake.sol\":4239:4661  function updateReward(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11317:11461  function contains(UintSet storage set, uint256 value) internal view returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11394:11398  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11417:11454  _contains(set._inner, bytes32(value)) */\n      tag_159\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11427:11430  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11427:11437  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11447:11452  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11439:11453  bytes32(value) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11417:11426  _contains */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11417:11454  _contains(set._inner, bytes32(value)) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11410:11454  return _contains(set._inner, bytes32(value)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11317:11461  function contains(UintSet storage set, uint256 value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_164:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_166:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_167:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_195\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_166\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_168:\n        /* \"#utility.yul\":641:665   */\n      tag_197\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_167\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_198:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_169:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_200\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_168\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_203\n      tag_164\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":917:1036   */\n    tag_202:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_204\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_169\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_170:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_171:\n        /* \"#utility.yul\":1346:1370   */\n      tag_207\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_170\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_23:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_209\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_171\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_172:\n        /* \"#utility.yul\":1684:1708   */\n      tag_211\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_170\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_212:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_173:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_214\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_172\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_30:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_217\n      tag_164\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1960:2079   */\n    tag_216:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_218\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_173\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_174:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_175:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_221\n        /* \"#utility.yul\":2386:2420   */\n      tag_222\n        /* \"#utility.yul\":2395:2419   */\n      tag_223\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_166\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2386:2420   */\n      tag_174\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2368:2421   */\n      tag_166\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_176:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_225\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_175\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_177:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_227\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_176\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_178:\n        /* \"#utility.yul\":2812:2863   */\n      tag_229\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_177\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_37:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_231\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3606   */\n    tag_40:\n        /* \"#utility.yul\":3200:3206   */\n      0x00\n        /* \"#utility.yul\":3208:3214   */\n      dup1\n        /* \"#utility.yul\":3257:3259   */\n      0x40\n        /* \"#utility.yul\":3245:3254   */\n      dup4\n        /* \"#utility.yul\":3236:3243   */\n      dup6\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3344   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3263:3342   */\n      tag_234\n      tag_164\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3225:3344   */\n    tag_233:\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3408:3461   */\n      tag_235\n        /* \"#utility.yul\":3453:3460   */\n      dup6\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup7\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3408:3461   */\n      tag_173\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3398:3461   */\n      swap3\n      pop\n        /* \"#utility.yul\":3354:3471   */\n      pop\n        /* \"#utility.yul\":3510:3512   */\n      0x20\n        /* \"#utility.yul\":3536:3589   */\n      tag_236\n        /* \"#utility.yul\":3581:3588   */\n      dup6\n        /* \"#utility.yul\":3572:3578   */\n      dup3\n        /* \"#utility.yul\":3561:3570   */\n      dup7\n        /* \"#utility.yul\":3557:3579   */\n      add\n        /* \"#utility.yul\":3536:3589   */\n      tag_173\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3526:3589   */\n      swap2\n      pop\n        /* \"#utility.yul\":3481:3599   */\n      pop\n        /* \"#utility.yul\":3132:3606   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3612:3730   */\n    tag_179:\n        /* \"#utility.yul\":3699:3723   */\n      tag_238\n        /* \"#utility.yul\":3717:3722   */\n      dup2\n        /* \"#utility.yul\":3699:3723   */\n      tag_167\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3694:3697   */\n      dup3\n        /* \"#utility.yul\":3687:3724   */\n      mstore\n        /* \"#utility.yul\":3612:3730   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3736:3958   */\n    tag_51:\n        /* \"#utility.yul\":3829:3833   */\n      0x00\n        /* \"#utility.yul\":3867:3869   */\n      0x20\n        /* \"#utility.yul\":3856:3865   */\n      dup3\n        /* \"#utility.yul\":3852:3870   */\n      add\n        /* \"#utility.yul\":3844:3870   */\n      swap1\n      pop\n        /* \"#utility.yul\":3880:3951   */\n      tag_240\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3950   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3880:3951   */\n      tag_179\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3736:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4133   */\n    tag_180:\n        /* \"#utility.yul\":4048:4059   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4077:4080   */\n      dup3\n        /* \"#utility.yul\":4070:4089   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x20\n        /* \"#utility.yul\":4117:4120   */\n      dup3\n        /* \"#utility.yul\":4113:4127   */\n      add\n        /* \"#utility.yul\":4098:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":3964:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4318   */\n    tag_181:\n        /* \"#utility.yul\":4279:4310   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4267:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4277   */\n      add\n        /* \"#utility.yul\":4256:4311   */\n      mstore\n        /* \"#utility.yul\":4139:4318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4324:4690   */\n    tag_182:\n        /* \"#utility.yul\":4466:4469   */\n      0x00\n        /* \"#utility.yul\":4487:4554   */\n      tag_244\n        /* \"#utility.yul\":4551:4553   */\n      0x1d\n        /* \"#utility.yul\":4546:4549   */\n      dup4\n        /* \"#utility.yul\":4487:4554   */\n      tag_180\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4480:4554   */\n      swap2\n      pop\n        /* \"#utility.yul\":4563:4656   */\n      tag_245\n        /* \"#utility.yul\":4652:4655   */\n      dup3\n        /* \"#utility.yul\":4563:4656   */\n      tag_181\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4676:4679   */\n      dup3\n        /* \"#utility.yul\":4672:4684   */\n      add\n        /* \"#utility.yul\":4665:4684   */\n      swap1\n      pop\n        /* \"#utility.yul\":4324:4690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4696:5115   */\n    tag_70:\n        /* \"#utility.yul\":4862:4866   */\n      0x00\n        /* \"#utility.yul\":4900:4902   */\n      0x20\n        /* \"#utility.yul\":4889:4898   */\n      dup3\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4877:4903   */\n      swap1\n      pop\n        /* \"#utility.yul\":4949:4958   */\n      dup2\n        /* \"#utility.yul\":4943:4947   */\n      dup2\n        /* \"#utility.yul\":4939:4959   */\n      sub\n        /* \"#utility.yul\":4935:4936   */\n      0x00\n        /* \"#utility.yul\":4924:4933   */\n      dup4\n        /* \"#utility.yul\":4920:4937   */\n      add\n        /* \"#utility.yul\":4913:4960   */\n      mstore\n        /* \"#utility.yul\":4977:5108   */\n      tag_247\n        /* \"#utility.yul\":5103:5107   */\n      dup2\n        /* \"#utility.yul\":4977:5108   */\n      tag_182\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4969:5108   */\n      swap1\n      pop\n        /* \"#utility.yul\":4696:5115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5121:5301   */\n    tag_183:\n        /* \"#utility.yul\":5169:5246   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5166:5167   */\n      0x00\n        /* \"#utility.yul\":5159:5247   */\n      mstore\n        /* \"#utility.yul\":5266:5270   */\n      0x11\n        /* \"#utility.yul\":5263:5264   */\n      0x04\n        /* \"#utility.yul\":5256:5271   */\n      mstore\n        /* \"#utility.yul\":5290:5294   */\n      0x24\n        /* \"#utility.yul\":5287:5288   */\n      0x00\n        /* \"#utility.yul\":5280:5295   */\n      revert\n        /* \"#utility.yul\":5307:5501   */\n    tag_74:\n        /* \"#utility.yul\":5347:5351   */\n      0x00\n        /* \"#utility.yul\":5367:5387   */\n      tag_250\n        /* \"#utility.yul\":5385:5386   */\n      dup3\n        /* \"#utility.yul\":5367:5387   */\n      tag_170\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5362:5387   */\n      swap2\n      pop\n        /* \"#utility.yul\":5401:5421   */\n      tag_251\n        /* \"#utility.yul\":5419:5420   */\n      dup4\n        /* \"#utility.yul\":5401:5421   */\n      tag_170\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5396:5421   */\n      swap3\n      pop\n        /* \"#utility.yul\":5445:5446   */\n      dup3\n        /* \"#utility.yul\":5442:5443   */\n      dup3\n        /* \"#utility.yul\":5438:5447   */\n      sub\n        /* \"#utility.yul\":5430:5447   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5470   */\n      dup2\n        /* \"#utility.yul\":5463:5467   */\n      dup2\n        /* \"#utility.yul\":5460:5471   */\n      gt\n        /* \"#utility.yul\":5457:5494   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":5474:5492   */\n      tag_253\n      tag_183\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5457:5494   */\n    tag_252:\n        /* \"#utility.yul\":5307:5501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5507:5839   */\n    tag_77:\n        /* \"#utility.yul\":5628:5632   */\n      0x00\n        /* \"#utility.yul\":5666:5668   */\n      0x40\n        /* \"#utility.yul\":5655:5664   */\n      dup3\n        /* \"#utility.yul\":5651:5669   */\n      add\n        /* \"#utility.yul\":5643:5669   */\n      swap1\n      pop\n        /* \"#utility.yul\":5679:5750   */\n      tag_255\n        /* \"#utility.yul\":5747:5748   */\n      0x00\n        /* \"#utility.yul\":5736:5745   */\n      dup4\n        /* \"#utility.yul\":5732:5749   */\n      add\n        /* \"#utility.yul\":5723:5729   */\n      dup6\n        /* \"#utility.yul\":5679:5750   */\n      tag_179\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5760:5832   */\n      tag_256\n        /* \"#utility.yul\":5828:5830   */\n      0x20\n        /* \"#utility.yul\":5817:5826   */\n      dup4\n        /* \"#utility.yul\":5813:5831   */\n      add\n        /* \"#utility.yul\":5804:5810   */\n      dup5\n        /* \"#utility.yul\":5760:5832   */\n      tag_171\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5507:5839   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5845:5935   */\n    tag_184:\n        /* \"#utility.yul\":5879:5886   */\n      0x00\n        /* \"#utility.yul\":5922:5927   */\n      dup2\n        /* \"#utility.yul\":5915:5928   */\n      iszero\n        /* \"#utility.yul\":5908:5929   */\n      iszero\n        /* \"#utility.yul\":5897:5929   */\n      swap1\n      pop\n        /* \"#utility.yul\":5845:5935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5941:6057   */\n    tag_185:\n        /* \"#utility.yul\":6011:6032   */\n      tag_259\n        /* \"#utility.yul\":6026:6031   */\n      dup2\n        /* \"#utility.yul\":6011:6032   */\n      tag_184\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":6001:6033   */\n      eq\n        /* \"#utility.yul\":5991:6051   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":5991:6051   */\n    tag_260:\n        /* \"#utility.yul\":5941:6057   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6063:6200   */\n    tag_186:\n        /* \"#utility.yul\":6117:6122   */\n      0x00\n        /* \"#utility.yul\":6148:6154   */\n      dup2\n        /* \"#utility.yul\":6142:6155   */\n      mload\n        /* \"#utility.yul\":6133:6155   */\n      swap1\n      pop\n        /* \"#utility.yul\":6164:6194   */\n      tag_262\n        /* \"#utility.yul\":6188:6193   */\n      dup2\n        /* \"#utility.yul\":6164:6194   */\n      tag_185\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6063:6200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6206:6551   */\n    tag_81:\n        /* \"#utility.yul\":6273:6279   */\n      0x00\n        /* \"#utility.yul\":6322:6324   */\n      0x20\n        /* \"#utility.yul\":6310:6319   */\n      dup3\n        /* \"#utility.yul\":6301:6308   */\n      dup5\n        /* \"#utility.yul\":6297:6320   */\n      sub\n        /* \"#utility.yul\":6293:6325   */\n      slt\n        /* \"#utility.yul\":6290:6409   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":6328:6407   */\n      tag_265\n      tag_164\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6290:6409   */\n    tag_264:\n        /* \"#utility.yul\":6448:6449   */\n      0x00\n        /* \"#utility.yul\":6473:6534   */\n      tag_266\n        /* \"#utility.yul\":6526:6533   */\n      dup5\n        /* \"#utility.yul\":6517:6523   */\n      dup3\n        /* \"#utility.yul\":6506:6515   */\n      dup6\n        /* \"#utility.yul\":6502:6524   */\n      add\n        /* \"#utility.yul\":6473:6534   */\n      tag_186\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6463:6534   */\n      swap2\n      pop\n        /* \"#utility.yul\":6419:6544   */\n      pop\n        /* \"#utility.yul\":6206:6551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6557:6729   */\n    tag_187:\n        /* \"#utility.yul\":6697:6721   */\n      0x496e76616c6964207374616b696e6720706572696f6400000000000000000000\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6685:6691   */\n      dup3\n        /* \"#utility.yul\":6681:6695   */\n      add\n        /* \"#utility.yul\":6674:6722   */\n      mstore\n        /* \"#utility.yul\":6557:6729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6735:7101   */\n    tag_188:\n        /* \"#utility.yul\":6877:6880   */\n      0x00\n        /* \"#utility.yul\":6898:6965   */\n      tag_269\n        /* \"#utility.yul\":6962:6964   */\n      0x16\n        /* \"#utility.yul\":6957:6960   */\n      dup4\n        /* \"#utility.yul\":6898:6965   */\n      tag_180\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6891:6965   */\n      swap2\n      pop\n        /* \"#utility.yul\":6974:7067   */\n      tag_270\n        /* \"#utility.yul\":7063:7066   */\n      dup3\n        /* \"#utility.yul\":6974:7067   */\n      tag_187\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7092:7094   */\n      0x20\n        /* \"#utility.yul\":7087:7090   */\n      dup3\n        /* \"#utility.yul\":7083:7095   */\n      add\n        /* \"#utility.yul\":7076:7095   */\n      swap1\n      pop\n        /* \"#utility.yul\":6735:7101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7107:7526   */\n    tag_100:\n        /* \"#utility.yul\":7273:7277   */\n      0x00\n        /* \"#utility.yul\":7311:7313   */\n      0x20\n        /* \"#utility.yul\":7300:7309   */\n      dup3\n        /* \"#utility.yul\":7296:7314   */\n      add\n        /* \"#utility.yul\":7288:7314   */\n      swap1\n      pop\n        /* \"#utility.yul\":7360:7369   */\n      dup2\n        /* \"#utility.yul\":7354:7358   */\n      dup2\n        /* \"#utility.yul\":7350:7370   */\n      sub\n        /* \"#utility.yul\":7346:7347   */\n      0x00\n        /* \"#utility.yul\":7335:7344   */\n      dup4\n        /* \"#utility.yul\":7331:7348   */\n      add\n        /* \"#utility.yul\":7324:7371   */\n      mstore\n        /* \"#utility.yul\":7388:7519   */\n      tag_272\n        /* \"#utility.yul\":7514:7518   */\n      dup2\n        /* \"#utility.yul\":7388:7519   */\n      tag_188\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7380:7519   */\n      swap1\n      pop\n        /* \"#utility.yul\":7107:7526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7532:7974   */\n    tag_103:\n        /* \"#utility.yul\":7681:7685   */\n      0x00\n        /* \"#utility.yul\":7719:7721   */\n      0x60\n        /* \"#utility.yul\":7708:7717   */\n      dup3\n        /* \"#utility.yul\":7704:7722   */\n      add\n        /* \"#utility.yul\":7696:7722   */\n      swap1\n      pop\n        /* \"#utility.yul\":7732:7803   */\n      tag_274\n        /* \"#utility.yul\":7800:7801   */\n      0x00\n        /* \"#utility.yul\":7789:7798   */\n      dup4\n        /* \"#utility.yul\":7785:7802   */\n      add\n        /* \"#utility.yul\":7776:7782   */\n      dup7\n        /* \"#utility.yul\":7732:7803   */\n      tag_179\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7813:7885   */\n      tag_275\n        /* \"#utility.yul\":7881:7883   */\n      0x20\n        /* \"#utility.yul\":7870:7879   */\n      dup4\n        /* \"#utility.yul\":7866:7884   */\n      add\n        /* \"#utility.yul\":7857:7863   */\n      dup6\n        /* \"#utility.yul\":7813:7885   */\n      tag_179\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7895:7967   */\n      tag_276\n        /* \"#utility.yul\":7963:7965   */\n      0x40\n        /* \"#utility.yul\":7952:7961   */\n      dup4\n        /* \"#utility.yul\":7948:7966   */\n      add\n        /* \"#utility.yul\":7939:7945   */\n      dup5\n        /* \"#utility.yul\":7895:7967   */\n      tag_171\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7532:7974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7980:8171   */\n    tag_108:\n        /* \"#utility.yul\":8020:8023   */\n      0x00\n        /* \"#utility.yul\":8039:8059   */\n      tag_278\n        /* \"#utility.yul\":8057:8058   */\n      dup3\n        /* \"#utility.yul\":8039:8059   */\n      tag_170\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8034:8059   */\n      swap2\n      pop\n        /* \"#utility.yul\":8073:8093   */\n      tag_279\n        /* \"#utility.yul\":8091:8092   */\n      dup4\n        /* \"#utility.yul\":8073:8093   */\n      tag_170\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8068:8093   */\n      swap3\n      pop\n        /* \"#utility.yul\":8116:8117   */\n      dup3\n        /* \"#utility.yul\":8113:8114   */\n      dup3\n        /* \"#utility.yul\":8109:8118   */\n      add\n        /* \"#utility.yul\":8102:8118   */\n      swap1\n      pop\n        /* \"#utility.yul\":8137:8140   */\n      dup1\n        /* \"#utility.yul\":8134:8135   */\n      dup3\n        /* \"#utility.yul\":8131:8141   */\n      gt\n        /* \"#utility.yul\":8128:8164   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":8144:8162   */\n      tag_281\n      tag_183\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8128:8164   */\n    tag_280:\n        /* \"#utility.yul\":7980:8171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8177:8509   */\n    tag_111:\n        /* \"#utility.yul\":8298:8302   */\n      0x00\n        /* \"#utility.yul\":8336:8338   */\n      0x40\n        /* \"#utility.yul\":8325:8334   */\n      dup3\n        /* \"#utility.yul\":8321:8339   */\n      add\n        /* \"#utility.yul\":8313:8339   */\n      swap1\n      pop\n        /* \"#utility.yul\":8349:8420   */\n      tag_283\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8406:8415   */\n      dup4\n        /* \"#utility.yul\":8402:8419   */\n      add\n        /* \"#utility.yul\":8393:8399   */\n      dup6\n        /* \"#utility.yul\":8349:8420   */\n      tag_171\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8430:8502   */\n      tag_284\n        /* \"#utility.yul\":8498:8500   */\n      0x20\n        /* \"#utility.yul\":8487:8496   */\n      dup4\n        /* \"#utility.yul\":8483:8501   */\n      add\n        /* \"#utility.yul\":8474:8480   */\n      dup5\n        /* \"#utility.yul\":8430:8502   */\n      tag_171\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8177:8509   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8515:8925   */\n    tag_129:\n        /* \"#utility.yul\":8555:8562   */\n      0x00\n        /* \"#utility.yul\":8578:8598   */\n      tag_286\n        /* \"#utility.yul\":8596:8597   */\n      dup3\n        /* \"#utility.yul\":8578:8598   */\n      tag_170\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8573:8598   */\n      swap2\n      pop\n        /* \"#utility.yul\":8612:8632   */\n      tag_287\n        /* \"#utility.yul\":8630:8631   */\n      dup4\n        /* \"#utility.yul\":8612:8632   */\n      tag_170\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8607:8632   */\n      swap3\n      pop\n        /* \"#utility.yul\":8667:8668   */\n      dup3\n        /* \"#utility.yul\":8664:8665   */\n      dup3\n        /* \"#utility.yul\":8660:8669   */\n      mul\n        /* \"#utility.yul\":8689:8719   */\n      tag_288\n        /* \"#utility.yul\":8707:8718   */\n      dup2\n        /* \"#utility.yul\":8689:8719   */\n      tag_170\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8678:8719   */\n      swap2\n      pop\n        /* \"#utility.yul\":8868:8869   */\n      dup3\n        /* \"#utility.yul\":8859:8866   */\n      dup3\n        /* \"#utility.yul\":8855:8870   */\n      div\n        /* \"#utility.yul\":8852:8853   */\n      dup5\n        /* \"#utility.yul\":8849:8871   */\n      eq\n        /* \"#utility.yul\":8829:8830   */\n      dup4\n        /* \"#utility.yul\":8822:8831   */\n      iszero\n        /* \"#utility.yul\":8802:8885   */\n      or\n        /* \"#utility.yul\":8779:8918   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":8898:8916   */\n      tag_290\n      tag_183\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8779:8918   */\n    tag_289:\n        /* \"#utility.yul\":8563:8925   */\n      pop\n        /* \"#utility.yul\":8515:8925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b50b332a767a046f2a6170a2d6d0c25fe2ee8f33e7636e1edc7bcdf0d563aa6c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1228": {
									"entryPoint": null,
									"id": 1228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_277": {
									"entryPoint": null,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_add_544": {
									"entryPoint": 607,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_647": {
									"entryPoint": 720,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 383,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_995": {
									"entryPoint": 576,
									"id": 995,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2223:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:7"
															},
															"nodeType": "YulIf",
															"src": "1326:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:7",
														"type": ""
													}
												],
												"src": "1205:663:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1927:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1934:3:7",
														"type": ""
													}
												],
												"src": "1874:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2096:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2091:4:7",
														"type": ""
													}
												],
												"src": "1998:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620014de380380620014de83398181016040528101906200003691906200038d565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620003f7565b60405180910390fd5b620000bb816200017f60201b60201c565b50600180819055508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160068190555042600781905550620001275f60086200024060201b90919060201c565b506200014162093a8060086200024060201b90919060201c565b506200015b6212750060086200024060201b90919060201c565b5062000175624f1a0060086200024060201b90919060201c565b5050505062000412565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f62000257835f01835f1b6200025f60201b60201c565b905092915050565b5f620002728383620002d060201b60201c565b620002c657825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f208190555060019050620002ca565b5f90505b92915050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200031f82620002f4565b9050919050565b620003318162000313565b81146200033c575f80fd5b50565b5f815190506200034f8162000326565b92915050565b5f819050919050565b620003698162000355565b811462000374575f80fd5b50565b5f8151905062000387816200035e565b92915050565b5f805f60608486031215620003a757620003a6620002f0565b5b5f620003b6868287016200033f565b9350506020620003c98682870162000377565b9250506040620003dc868287016200033f565b9150509250925092565b620003f18162000313565b82525050565b5f6020820190506200040c5f830184620003e6565b92915050565b6110be80620004205f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80637b0a47ee1161008a578063b88a802f11610064578063b88a802f146101eb578063d82e3962146101f5578063f2fde38b14610225578063f8077fae14610241576100cd565b80637b0a47ee14610191578063817b1cd2146101af5780638da5cb5b146101cd576100cd565b80631460fa87146100d15780632c42b233146101015780632e1a7d4d14610131578063715018a61461014d57806372f702f3146101575780637b0472f014610175575b5f80fd5b6100eb60048036038101906100e69190610c66565b61025f565b6040516100f89190610ca9565b60405180910390f35b61011b60048036038101906101169190610c66565b610274565b6040516101289190610ca9565b60405180910390f35b61014b60048036038101906101469190610cec565b610289565b005b61015561043d565b005b61015f610450565b60405161016c9190610d72565b60405180910390f35b61018f600480360381019061018a9190610d8b565b610475565b005b6101996106c3565b6040516101a69190610ca9565b60405180910390f35b6101b76106c9565b6040516101c49190610ca9565b60405180910390f35b6101d56106cf565b6040516101e29190610dd8565b60405180910390f35b6101f36106f6565b005b61020f600480360381019061020a9190610c66565b610812565b60405161021c9190610ca9565b60405180910390f35b61023f600480360381019061023a9190610c66565b6108bd565b005b610249610941565b6040516102569190610ca9565b60405180910390f35b6004602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b610291610947565b5f81116102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610e4b565b60405180910390fd5b6102dc3361098d565b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103289190610e96565b925050819055508060035f8282546103409190610e96565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103a3929190610ec9565b6020604051808303815f875af11580156103bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e39190610f25565b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161042a9190610ca9565b60405180910390a261043a610a79565b50565b610445610a82565b61044e5f610b09565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61047d610947565b5f82116104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690610e4b565b60405180910390fd5b6104d3816008610bca90919063ffffffff16565b610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610f9a565b60405180910390fd5b61051b3361098d565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161057993929190610fb8565b6020604051808303815f875af1158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b99190610f25565b508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106069190610fed565b925050819055508160035f82825461061e9190610fed565b925050819055504260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9083836040516106af929190611020565b60405180910390a26106bf610a79565b5050565b60065481565b60035481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106fe610947565b6107073361098d565b5f61071133610812565b90505f8111156108075760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610777929190610ec9565b6020604051808303815f875af1158015610793573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b79190610f25565b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516107fe9190610ca9565b60405180910390a25b50610810610a79565b565b5f8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544261085d9190610e96565b90506006548160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108ab9190611047565b6108b59190611047565b915050919050565b6108c5610a82565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610935575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161092c9190610dd8565b60405180910390fd5b61093e81610b09565b50565b60075481565b600260015403610983576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b600754421115610a76575f600754426109a69190610e96565b90505f600654826003546109ba9190611047565b6109c49190611047565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610a0b6106cf565b30846040518463ffffffff1660e01b8152600401610a2b93929190610fb8565b6020604051808303815f875af1158015610a47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610f25565b504260078190555050505b50565b60018081905550565b610a8a610be1565b73ffffffffffffffffffffffffffffffffffffffff16610aa86106cf565b73ffffffffffffffffffffffffffffffffffffffff1614610b0757610acb610be1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610afe9190610dd8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f610bd9835f01835f1b610be8565b905092915050565b5f33905090565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3582610c0c565b9050919050565b610c4581610c2b565b8114610c4f575f80fd5b50565b5f81359050610c6081610c3c565b92915050565b5f60208284031215610c7b57610c7a610c08565b5b5f610c8884828501610c52565b91505092915050565b5f819050919050565b610ca381610c91565b82525050565b5f602082019050610cbc5f830184610c9a565b92915050565b610ccb81610c91565b8114610cd5575f80fd5b50565b5f81359050610ce681610cc2565b92915050565b5f60208284031215610d0157610d00610c08565b5b5f610d0e84828501610cd8565b91505092915050565b5f819050919050565b5f610d3a610d35610d3084610c0c565b610d17565b610c0c565b9050919050565b5f610d4b82610d20565b9050919050565b5f610d5c82610d41565b9050919050565b610d6c81610d52565b82525050565b5f602082019050610d855f830184610d63565b92915050565b5f8060408385031215610da157610da0610c08565b5b5f610dae85828601610cd8565b9250506020610dbf85828601610cd8565b9150509250929050565b610dd281610c2b565b82525050565b5f602082019050610deb5f830184610dc9565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610e35601d83610df1565b9150610e4082610e01565b602082019050919050565b5f6020820190508181035f830152610e6281610e29565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ea082610c91565b9150610eab83610c91565b9250828203905081811115610ec357610ec2610e69565b5b92915050565b5f604082019050610edc5f830185610dc9565b610ee96020830184610c9a565b9392505050565b5f8115159050919050565b610f0481610ef0565b8114610f0e575f80fd5b50565b5f81519050610f1f81610efb565b92915050565b5f60208284031215610f3a57610f39610c08565b5b5f610f4784828501610f11565b91505092915050565b7f496e76616c6964207374616b696e6720706572696f64000000000000000000005f82015250565b5f610f84601683610df1565b9150610f8f82610f50565b602082019050919050565b5f6020820190508181035f830152610fb181610f78565b9050919050565b5f606082019050610fcb5f830186610dc9565b610fd86020830185610dc9565b610fe56040830184610c9a565b949350505050565b5f610ff782610c91565b915061100283610c91565b925082820190508082111561101a57611019610e69565b5b92915050565b5f6040820190506110335f830185610c9a565b6110406020830184610c9a565b9392505050565b5f61105182610c91565b915061105c83610c91565b925082820261106a81610c91565b9150828204841483151761108157611080610e69565b5b509291505056fea2646970667358221220b50b332a767a046f2a6170a2d6d0c25fe2ee8f33e7636e1edc7bcdf0d563aa6c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14DE CODESIZE SUB DUP1 PUSH3 0x14DE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x38D JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x17F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0x127 PUSH0 PUSH1 0x8 PUSH3 0x240 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x141 PUSH3 0x93A80 PUSH1 0x8 PUSH3 0x240 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x15B PUSH3 0x127500 PUSH1 0x8 PUSH3 0x240 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x175 PUSH3 0x4F1A00 PUSH1 0x8 PUSH3 0x240 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x412 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x257 DUP4 PUSH0 ADD DUP4 PUSH0 SHL PUSH3 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x272 DUP4 DUP4 PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2C6 JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x2CA JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x31F DUP3 PUSH3 0x2F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x331 DUP2 PUSH3 0x313 JUMP JUMPDEST DUP2 EQ PUSH3 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x34F DUP2 PUSH3 0x326 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x369 DUP2 PUSH3 0x355 JUMP JUMPDEST DUP2 EQ PUSH3 0x374 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x387 DUP2 PUSH3 0x35E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3A7 JUMPI PUSH3 0x3A6 PUSH3 0x2F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3B6 DUP7 DUP3 DUP8 ADD PUSH3 0x33F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3C9 DUP7 DUP3 DUP8 ADD PUSH3 0x377 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3DC DUP7 DUP3 DUP8 ADD PUSH3 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x3F1 DUP2 PUSH3 0x313 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x40C PUSH0 DUP4 ADD DUP5 PUSH3 0x3E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10BE DUP1 PUSH3 0x420 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xF8077FAE EQ PUSH2 0x241 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1460FA87 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2C42B233 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x947 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC CALLER PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x43A PUSH2 0xA79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x445 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x44E PUSH0 PUSH2 0xB09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x47D PUSH2 0x947 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D3 DUP2 PUSH1 0x8 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51B CALLER PUSH2 0x98D JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP3 SWAP2 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6BF PUSH2 0xA79 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x947 JUMP JUMPDEST PUSH2 0x707 CALLER PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH2 0x711 CALLER PUSH2 0x812 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x807 JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x793 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x810 PUSH2 0xA79 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x85D SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0xA82 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x935 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xB09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA76 JUMPI PUSH0 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xA0B PUSH2 0x6CF JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA8 PUSH2 0x6CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB07 JUMPI PUSH2 0xACB PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD9 DUP4 PUSH0 ADD DUP4 PUSH0 SHL PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC35 DUP3 PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP2 EQ PUSH2 0xC4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC60 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC88 DUP5 DUP3 DUP6 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA3 DUP2 PUSH2 0xC91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH0 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xC91 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0E DUP5 DUP3 DUP6 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD3A PUSH2 0xD35 PUSH2 0xD30 DUP5 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4B DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5C DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD85 PUSH0 DUP4 ADD DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP6 DUP3 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDBF DUP6 DUP3 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDEB PUSH0 DUP4 ADD DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x1D DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEA0 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAB DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEDC PUSH0 DUP4 ADD DUP6 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xEE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF1F DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720706572696F6400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF84 PUSH1 0x16 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F DUP3 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB1 DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFCB PUSH0 DUP4 ADD DUP7 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xFD8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xFE5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF7 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1002 DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1033 PUSH0 DUP4 ADD DUP6 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x1040 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1051 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0x105C DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x106A DUP2 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SIGNEXTEND CALLER 0x2A PUSH23 0x7A046F2A6170A2D6D0C25FE2EE8F33E7636E1EDC7BCDF0 0xD5 PUSH4 0xAA6C6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "565:4488:6:-:0;;;1943:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2030:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:3;1917:7;:21;;;;2077:13:6::1;2055:12;;:36;;;;;;;;;;;;;;;;;;2114:11;2101:10;:24;;;;2157:15;2135:19;:37;;;;2231:52;1154:1;2231:23;:27;;;;:52;;;;:::i;:::-;;2293;1204:7;2293:23;:27;;;;:52;;;;:::i;:::-;;2355:53;1261:7;2355:23;:27;;;;:53;;;;:::i;:::-;;2418:47;1312:7;2418:23;:27;;;;:47;;;;:::i;:::-;;1943:529:::0;;;565:4488;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10804:129:5:-;10871:4;10894:32;10899:3;:10;;10919:5;10911:14;;10894:4;;;:32;;:::i;:::-;10887:39;;10804:129;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;;;:21;;:::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;4264:129::-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;565:4488:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2690,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_647": {
									"entryPoint": 3048,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_237": {
									"entryPoint": 3041,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_312": {
									"entryPoint": 2681,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_304": {
									"entryPoint": 2375,
									"id": 304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2825,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1452": {
									"entryPoint": 2066,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_1381": {
									"entryPoint": 1782,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1037": {
									"entryPoint": 3018,
									"id": 1037,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastRewardTimestamp_1140": {
									"entryPoint": 2369,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastStakeTimestamp_1136": {
									"entryPoint": 628,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1743,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1085,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_1138": {
									"entryPoint": 1731,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1297": {
									"entryPoint": 1141,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakedBalances_1132": {
									"entryPoint": 607,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_1126": {
									"entryPoint": 1104,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1128": {
									"entryPoint": 1737,
									"id": 1128,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2237,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1426": {
									"entryPoint": 2445,
									"id": 1426,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1343": {
									"entryPoint": 649,
									"id": 1343,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3689,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8928:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:7"
															},
															"nodeType": "YulIf",
															"src": "1664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:7",
														"type": ""
													}
												],
												"src": "1611:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													}
												],
												"src": "1739:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:7"
															},
															"nodeType": "YulIf",
															"src": "1960:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:7",
														"type": ""
													}
												],
												"src": "1884:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2268:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2237:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2247:3:7",
														"type": ""
													}
												],
												"src": "2219:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2355:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2335:9:7",
														"type": ""
													}
												],
												"src": "2285:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2493:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2503:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2473:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2483:9:7",
														"type": ""
													}
												],
												"src": "2433:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2639:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2619:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2629:9:7",
														"type": ""
													}
												],
												"src": "2565:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:64:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2778:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2785:3:7",
														"type": ""
													}
												],
												"src": "2711:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2988:138:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2998:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:85:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2960:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2972:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2983:4:7",
														"type": ""
													}
												],
												"src": "2876:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3263:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:32:7"
															},
															"nodeType": "YulIf",
															"src": "3225:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3354:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3398:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3433:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3429:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3408:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3398:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3481:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3496:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3510:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3500:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3526:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3561:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3557:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3557:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3581:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3536:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3536:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3526:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3177:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3188:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3200:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3208:6:7",
														"type": ""
													}
												],
												"src": "3132:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3677:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3694:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3717:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3699:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3687:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3665:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3672:3:7",
														"type": ""
													}
												],
												"src": "3612:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3834:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3844:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3856:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3852:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3844:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3948:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3933:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3880:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3806:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3818:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3829:4:7",
														"type": ""
													}
												],
												"src": "3736:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4082:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4070:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4098:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4117:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4113:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4098:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4032:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4037:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4048:11:7",
														"type": ""
													}
												],
												"src": "3964:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4267:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4279:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4256:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4237:6:7",
														"type": ""
													}
												],
												"src": "4139:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4470:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4480:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4546:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4551:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4487:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4652:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "4563:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4665:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4676:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4672:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4672:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4458:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4466:3:7",
														"type": ""
													}
												],
												"src": "4324:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4867:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4877:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4885:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4877:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4924:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4935:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4943:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4913:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4969:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5103:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4977:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4969:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4847:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4862:4:7",
														"type": ""
													}
												],
												"src": "4696:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5149:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5166:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5169:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5159:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5159:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5266:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5256:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5280:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5121:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5352:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5362:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5385:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5367:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5362:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5396:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5419:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5401:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5396:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5430:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5442:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5445:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5438:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5430:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5472:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5474:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5474:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5474:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5463:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5469:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5460:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:11:7"
															},
															"nodeType": "YulIf",
															"src": "5457:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5338:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5341:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5347:4:7",
														"type": ""
													}
												],
												"src": "5307:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5633:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5643:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5655:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5643:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5723:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5736:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5747:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5732:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5679:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5804:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5813:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5760:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5760:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5597:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5609:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5617:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5628:4:7",
														"type": ""
													}
												],
												"src": "5507:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5887:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5897:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5915:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5915:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5897:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5869:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5879:7:7",
														"type": ""
													}
												],
												"src": "5845:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6035:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6044:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6047:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6037:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6037:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6026:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6011:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6011:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6001:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:40:7"
															},
															"nodeType": "YulIf",
															"src": "5991:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5974:5:7",
														"type": ""
													}
												],
												"src": "5941:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6123:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6133:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6148:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6142:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6133:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6188:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6164:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6164:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6101:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6109:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6117:5:7",
														"type": ""
													}
												],
												"src": "6063:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6280:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6326:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6328:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6328:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6328:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6301:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6310:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6293:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:32:7"
															},
															"nodeType": "YulIf",
															"src": "6290:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6419:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6434:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6448:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6438:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6463:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6506:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6517:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6502:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6502:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6526:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6473:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6473:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6463:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6250:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6261:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6273:6:7",
														"type": ""
													}
												],
												"src": "6206:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6663:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6685:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6693:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6681:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720706572696f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6697:24:7",
																		"type": "",
																		"value": "Invalid staking period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6655:6:7",
														"type": ""
													}
												],
												"src": "6557:172:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6881:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6891:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6957:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6898:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7063:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
																	"nodeType": "YulIdentifier",
																	"src": "6974:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7076:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7087:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7083:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6869:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6877:3:7",
														"type": ""
													}
												],
												"src": "6735:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7278:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7288:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7300:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7288:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7346:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7331:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7354:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7360:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7350:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7324:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7324:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7380:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7514:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7388:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7388:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7380:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7258:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7273:4:7",
														"type": ""
													}
												],
												"src": "7107:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7686:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7708:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7719:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7704:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7776:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7800:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7785:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7732:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7857:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7870:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7881:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7866:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7866:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7813:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7813:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7813:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7939:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7952:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7963:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7948:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7948:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7895:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7642:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7654:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7662:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7670:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7681:4:7",
														"type": ""
													}
												],
												"src": "7532:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8024:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8034:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8039:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8034:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8091:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8073:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8068:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8102:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8113:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8116:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8109:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8102:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8142:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8144:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8144:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8144:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8134:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8137:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8131:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:10:7"
															},
															"nodeType": "YulIf",
															"src": "8128:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8011:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8014:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8020:3:7",
														"type": ""
													}
												],
												"src": "7980:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8303:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8325:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8336:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8321:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8406:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8402:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8349:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8349:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8349:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8474:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8487:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8498:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8483:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8483:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8430:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8267:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8279:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8298:4:7",
														"type": ""
													}
												],
												"src": "8177:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8563:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8573:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8596:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8578:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8573:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8607:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8630:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8612:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8607:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8641:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8664:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8667:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8660:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8645:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8678:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8707:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8689:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8689:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8678:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8896:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8898:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8898:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8898:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8829:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8822:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8822:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8852:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8859:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8868:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8855:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8855:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8849:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8849:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8802:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8802:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:113:7"
															},
															"nodeType": "YulIf",
															"src": "8779:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8546:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8549:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8555:7:7",
														"type": ""
													}
												],
												"src": "8515:410:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid staking period\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80637b0a47ee1161008a578063b88a802f11610064578063b88a802f146101eb578063d82e3962146101f5578063f2fde38b14610225578063f8077fae14610241576100cd565b80637b0a47ee14610191578063817b1cd2146101af5780638da5cb5b146101cd576100cd565b80631460fa87146100d15780632c42b233146101015780632e1a7d4d14610131578063715018a61461014d57806372f702f3146101575780637b0472f014610175575b5f80fd5b6100eb60048036038101906100e69190610c66565b61025f565b6040516100f89190610ca9565b60405180910390f35b61011b60048036038101906101169190610c66565b610274565b6040516101289190610ca9565b60405180910390f35b61014b60048036038101906101469190610cec565b610289565b005b61015561043d565b005b61015f610450565b60405161016c9190610d72565b60405180910390f35b61018f600480360381019061018a9190610d8b565b610475565b005b6101996106c3565b6040516101a69190610ca9565b60405180910390f35b6101b76106c9565b6040516101c49190610ca9565b60405180910390f35b6101d56106cf565b6040516101e29190610dd8565b60405180910390f35b6101f36106f6565b005b61020f600480360381019061020a9190610c66565b610812565b60405161021c9190610ca9565b60405180910390f35b61023f600480360381019061023a9190610c66565b6108bd565b005b610249610941565b6040516102569190610ca9565b60405180910390f35b6004602052805f5260405f205f915090505481565b6005602052805f5260405f205f915090505481565b610291610947565b5f81116102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610e4b565b60405180910390fd5b6102dc3361098d565b8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103289190610e96565b925050819055508060035f8282546103409190610e96565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103a3929190610ec9565b6020604051808303815f875af11580156103bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e39190610f25565b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161042a9190610ca9565b60405180910390a261043a610a79565b50565b610445610a82565b61044e5f610b09565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61047d610947565b5f82116104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690610e4b565b60405180910390fd5b6104d3816008610bca90919063ffffffff16565b610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610f9a565b60405180910390fd5b61051b3361098d565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161057993929190610fb8565b6020604051808303815f875af1158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b99190610f25565b508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106069190610fed565b925050819055508160035f82825461061e9190610fed565b925050819055504260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9083836040516106af929190611020565b60405180910390a26106bf610a79565b5050565b60065481565b60035481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106fe610947565b6107073361098d565b5f61071133610812565b90505f8111156108075760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610777929190610ec9565b6020604051808303815f875af1158015610793573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b79190610f25565b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516107fe9190610ca9565b60405180910390a25b50610810610a79565b565b5f8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544261085d9190610e96565b90506006548160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108ab9190611047565b6108b59190611047565b915050919050565b6108c5610a82565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610935575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161092c9190610dd8565b60405180910390fd5b61093e81610b09565b50565b60075481565b600260015403610983576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b600754421115610a76575f600754426109a69190610e96565b90505f600654826003546109ba9190611047565b6109c49190611047565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610a0b6106cf565b30846040518463ffffffff1660e01b8152600401610a2b93929190610fb8565b6020604051808303815f875af1158015610a47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610f25565b504260078190555050505b50565b60018081905550565b610a8a610be1565b73ffffffffffffffffffffffffffffffffffffffff16610aa86106cf565b73ffffffffffffffffffffffffffffffffffffffff1614610b0757610acb610be1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610afe9190610dd8565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f610bd9835f01835f1b610be8565b905092915050565b5f33905090565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3582610c0c565b9050919050565b610c4581610c2b565b8114610c4f575f80fd5b50565b5f81359050610c6081610c3c565b92915050565b5f60208284031215610c7b57610c7a610c08565b5b5f610c8884828501610c52565b91505092915050565b5f819050919050565b610ca381610c91565b82525050565b5f602082019050610cbc5f830184610c9a565b92915050565b610ccb81610c91565b8114610cd5575f80fd5b50565b5f81359050610ce681610cc2565b92915050565b5f60208284031215610d0157610d00610c08565b5b5f610d0e84828501610cd8565b91505092915050565b5f819050919050565b5f610d3a610d35610d3084610c0c565b610d17565b610c0c565b9050919050565b5f610d4b82610d20565b9050919050565b5f610d5c82610d41565b9050919050565b610d6c81610d52565b82525050565b5f602082019050610d855f830184610d63565b92915050565b5f8060408385031215610da157610da0610c08565b5b5f610dae85828601610cd8565b9250506020610dbf85828601610cd8565b9150509250929050565b610dd281610c2b565b82525050565b5f602082019050610deb5f830184610dc9565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610e35601d83610df1565b9150610e4082610e01565b602082019050919050565b5f6020820190508181035f830152610e6281610e29565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ea082610c91565b9150610eab83610c91565b9250828203905081811115610ec357610ec2610e69565b5b92915050565b5f604082019050610edc5f830185610dc9565b610ee96020830184610c9a565b9392505050565b5f8115159050919050565b610f0481610ef0565b8114610f0e575f80fd5b50565b5f81519050610f1f81610efb565b92915050565b5f60208284031215610f3a57610f39610c08565b5b5f610f4784828501610f11565b91505092915050565b7f496e76616c6964207374616b696e6720706572696f64000000000000000000005f82015250565b5f610f84601683610df1565b9150610f8f82610f50565b602082019050919050565b5f6020820190508181035f830152610fb181610f78565b9050919050565b5f606082019050610fcb5f830186610dc9565b610fd86020830185610dc9565b610fe56040830184610c9a565b949350505050565b5f610ff782610c91565b915061100283610c91565b925082820190508082111561101a57611019610e69565b5b92915050565b5f6040820190506110335f830185610c9a565b6110406020830184610c9a565b9392505050565b5f61105182610c91565b915061105c83610c91565b925082820261106a81610c91565b9150828204841483151761108157611080610e69565b5b509291505056fea2646970667358221220b50b332a767a046f2a6170a2d6d0c25fe2ee8f33e7636e1edc7bcdf0d563aa6c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xF8077FAE EQ PUSH2 0x241 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CD JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1460FA87 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2C42B233 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x947 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC CALLER PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x43A PUSH2 0xA79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x445 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x44E PUSH0 PUSH2 0xB09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x47D PUSH2 0x947 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D3 DUP2 PUSH1 0x8 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51B CALLER PUSH2 0x98D JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0xFED JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP3 SWAP2 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6BF PUSH2 0xA79 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x947 JUMP JUMPDEST PUSH2 0x707 CALLER PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH2 0x711 CALLER PUSH2 0x812 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x807 JUMPI PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP3 SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x793 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x810 PUSH2 0xA79 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x85D SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0xA82 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x935 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xB09 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA76 JUMPI PUSH0 PUSH1 0x7 SLOAD TIMESTAMP PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xA0B PUSH2 0x6CF JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0xF25 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA8 PUSH2 0x6CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB07 JUMPI PUSH2 0xACB PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD9 DUP4 PUSH0 ADD DUP4 PUSH0 SHL PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC35 DUP3 PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP2 EQ PUSH2 0xC4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC60 DUP2 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC88 DUP5 DUP3 DUP6 ADD PUSH2 0xC52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA3 DUP2 PUSH2 0xC91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH0 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCB DUP2 PUSH2 0xC91 JUMP JUMPDEST DUP2 EQ PUSH2 0xCD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0E DUP5 DUP3 DUP6 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD3A PUSH2 0xD35 PUSH2 0xD30 DUP5 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4B DUP3 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD5C DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6C DUP2 PUSH2 0xD52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD85 PUSH0 DUP4 ADD DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAE DUP6 DUP3 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDBF DUP6 DUP3 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD2 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDEB PUSH0 DUP4 ADD DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 PUSH1 0x1D DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE40 DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE62 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEA0 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAB DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEDC PUSH0 DUP4 ADD DUP6 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xEE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xEF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF1F DUP2 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xC08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF47 DUP5 DUP3 DUP6 ADD PUSH2 0xF11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720706572696F6400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF84 PUSH1 0x16 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8F DUP3 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFB1 DUP2 PUSH2 0xF78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFCB PUSH0 DUP4 ADD DUP7 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xFD8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0xFE5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF7 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1002 DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x101A JUMPI PUSH2 0x1019 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1033 PUSH0 DUP4 ADD DUP6 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x1040 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1051 DUP3 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP PUSH2 0x105C DUP4 PUSH2 0xC91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x106A DUP2 PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0xE69 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SIGNEXTEND CALLER 0x2A PUSH23 0x7A046F2A6170A2D6D0C25FE2EE8F33E7636E1EDC7BCDF0 0xD5 PUSH4 0xAA6C6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "565:4488:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3377:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;737:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2686:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;915:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;769:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3817:284:6;;;:::i;:::-;;4822:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;972:34:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;801:49;;;;;;;;;;;;;;;;;:::o;856:53::-;;;;;;;;;;;;;;;;;:::o;3377:333::-;2356:21:3;:19;:21::i;:::-;3460:1:6::1;3451:6;:10;3443:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3505:24;3518:10;3505:12;:24::i;:::-;3570:6;3540:14;:26;3555:10;3540:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;3601:6;3586:11;;:21;;;;;;;:::i;:::-;;;;;;;;3617:12;;;;;;;;;;;:21;;;3639:10;3651:6;3617:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3684:10;3674:29;;;3696:6;3674:29;;;;;;:::i;:::-;;;;;;;;2398:20:3::0;:18;:20::i;:::-;3377:333:6;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;737:26:6:-;;;;;;;;;;;;;:::o;2686:551::-;2356:21:3;:19;:21::i;:::-;2789:1:6::1;2780:6;:10;2772:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:47;2875:13;2842:23;:32;;:47;;;;:::i;:::-;2834:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2935:24;2948:10;2935:12;:24::i;:::-;2978:12;;;;;;;;;;;:25;;;3004:10;3024:4;3031:6;2978:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3078:6;3048:14;:26;3063:10;3048:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;3109:6;3094:11;;:21;;;;;;;:::i;:::-;;;;;;;;3158:15;3125:18;:30;3144:10;3125:30;;;;;;;;;;;;;;;:48;;;;3196:10;3189:41;;;3208:6;3216:13;3189:41;;;;;;;:::i;:::-;;;;;;;;2398:20:3::0;:18;:20::i;:::-;2686:551:6;;:::o;915:25::-;;;;:::o;769:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3817:284:6:-;2356:21:3;:19;:21::i;:::-;3872:24:6::1;3885:10;3872:12;:24::i;:::-;3906:14;3923:27;3939:10;3923:15;:27::i;:::-;3906:44;;3974:1;3965:6;:10;3961:134;;;3991:12;;;;;;;;;;;:21;;;4013:10;4025:6;3991:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4065:10;4051:33;;;4077:6;4051:33;;;;;;:::i;:::-;;;;;;;;3961:134;3862:239;2398:20:3::0;:18;:20::i;:::-;3817:284:6:o;4822:229::-;4885:7;4904:22;4947:18;:27;4966:7;4947:27;;;;;;;;;;;;;;;;4929:15;:45;;;;:::i;:::-;4904:70;;5034:10;;5017:14;4991;:23;5006:7;4991:23;;;;;;;;;;;;;;;;:40;;;;:::i;:::-;:53;;;;:::i;:::-;4984:60;;;4822:229;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;972:34:6:-;;;;:::o;2431:307:3:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;4239:422:6:-;4376:19;;4358:15;:37;4354:305;;;4407:22;4450:19;;4432:15;:37;;;;:::i;:::-;4407:62;;4479:14;4527:10;;4510:14;4496:11;;:28;;;;:::i;:::-;:41;;;;:::i;:::-;4479:58;;4548:12;;;;;;;;;;;:25;;;4574:7;:5;:7::i;:::-;4591:4;4598:6;4548:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4637:15;4615:19;:37;;;;4397:262;;4354:305;4239:422;:::o;2744:208:3:-;1713:1;2924:7;:21;;;;2744:208::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;11317:144:5:-;11394:4;11417:37;11427:3;:10;;11447:5;11439:14;;11417:9;:37::i;:::-;11410:44;;11317:144;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;4264:129:5:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:474::-;3200:6;3208;3257:2;3245:9;3236:7;3232:23;3228:32;3225:119;;;3263:79;;:::i;:::-;3225:119;3383:1;3408:53;3453:7;3444:6;3433:9;3429:22;3408:53;:::i;:::-;3398:63;;3354:117;3510:2;3536:53;3581:7;3572:6;3561:9;3557:22;3536:53;:::i;:::-;3526:63;;3481:118;3132:474;;;;;:::o;3612:118::-;3699:24;3717:5;3699:24;:::i;:::-;3694:3;3687:37;3612:118;;:::o;3736:222::-;3829:4;3867:2;3856:9;3852:18;3844:26;;3880:71;3948:1;3937:9;3933:17;3924:6;3880:71;:::i;:::-;3736:222;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:179::-;4279:31;4275:1;4267:6;4263:14;4256:55;4139:179;:::o;4324:366::-;4466:3;4487:67;4551:2;4546:3;4487:67;:::i;:::-;4480:74;;4563:93;4652:3;4563:93;:::i;:::-;4681:2;4676:3;4672:12;4665:19;;4324:366;;;:::o;4696:419::-;4862:4;4900:2;4889:9;4885:18;4877:26;;4949:9;4943:4;4939:20;4935:1;4924:9;4920:17;4913:47;4977:131;5103:4;4977:131;:::i;:::-;4969:139;;4696:419;;;:::o;5121:180::-;5169:77;5166:1;5159:88;5266:4;5263:1;5256:15;5290:4;5287:1;5280:15;5307:194;5347:4;5367:20;5385:1;5367:20;:::i;:::-;5362:25;;5401:20;5419:1;5401:20;:::i;:::-;5396:25;;5445:1;5442;5438:9;5430:17;;5469:1;5463:4;5460:11;5457:37;;;5474:18;;:::i;:::-;5457:37;5307:194;;;;:::o;5507:332::-;5628:4;5666:2;5655:9;5651:18;5643:26;;5679:71;5747:1;5736:9;5732:17;5723:6;5679:71;:::i;:::-;5760:72;5828:2;5817:9;5813:18;5804:6;5760:72;:::i;:::-;5507:332;;;;;:::o;5845:90::-;5879:7;5922:5;5915:13;5908:21;5897:32;;5845:90;;;:::o;5941:116::-;6011:21;6026:5;6011:21;:::i;:::-;6004:5;6001:32;5991:60;;6047:1;6044;6037:12;5991:60;5941:116;:::o;6063:137::-;6117:5;6148:6;6142:13;6133:22;;6164:30;6188:5;6164:30;:::i;:::-;6063:137;;;;:::o;6206:345::-;6273:6;6322:2;6310:9;6301:7;6297:23;6293:32;6290:119;;;6328:79;;:::i;:::-;6290:119;6448:1;6473:61;6526:7;6517:6;6506:9;6502:22;6473:61;:::i;:::-;6463:71;;6419:125;6206:345;;;;:::o;6557:172::-;6697:24;6693:1;6685:6;6681:14;6674:48;6557:172;:::o;6735:366::-;6877:3;6898:67;6962:2;6957:3;6898:67;:::i;:::-;6891:74;;6974:93;7063:3;6974:93;:::i;:::-;7092:2;7087:3;7083:12;7076:19;;6735:366;;;:::o;7107:419::-;7273:4;7311:2;7300:9;7296:18;7288:26;;7360:9;7354:4;7350:20;7346:1;7335:9;7331:17;7324:47;7388:131;7514:4;7388:131;:::i;:::-;7380:139;;7107:419;;;:::o;7532:442::-;7681:4;7719:2;7708:9;7704:18;7696:26;;7732:71;7800:1;7789:9;7785:17;7776:6;7732:71;:::i;:::-;7813:72;7881:2;7870:9;7866:18;7857:6;7813:72;:::i;:::-;7895;7963:2;7952:9;7948:18;7939:6;7895:72;:::i;:::-;7532:442;;;;;;:::o;7980:191::-;8020:3;8039:20;8057:1;8039:20;:::i;:::-;8034:25;;8073:20;8091:1;8073:20;:::i;:::-;8068:25;;8116:1;8113;8109:9;8102:16;;8137:3;8134:1;8131:10;8128:36;;;8144:18;;:::i;:::-;8128:36;7980:191;;;;:::o;8177:332::-;8298:4;8336:2;8325:9;8321:18;8313:26;;8349:71;8417:1;8406:9;8402:17;8393:6;8349:71;:::i;:::-;8430:72;8498:2;8487:9;8483:18;8474:6;8430:72;:::i;:::-;8177:332;;;;;:::o;8515:410::-;8555:7;8578:20;8596:1;8578:20;:::i;:::-;8573:25;;8612:20;8630:1;8612:20;:::i;:::-;8607:25;;8667:1;8664;8660:9;8689:30;8707:11;8689:30;:::i;:::-;8678:41;;8868:1;8859:7;8855:15;8852:1;8849:22;8829:1;8822:9;8802:83;8779:139;;8898:18;;:::i;:::-;8779:139;8563:362;8515:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "857200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateReward(address)": "infinite",
								"claimReward()": "infinite",
								"lastRewardTimestamp()": "2513",
								"lastStakeTimestamp(address)": "2825",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2448",
								"stake(uint256,uint256)": "infinite",
								"stakedBalances(address)": "2803",
								"stakingToken()": "infinite",
								"totalStaked()": "2470",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"updateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1943,
									"end": 2472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2030,
									"end": 2043,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2077,
									"end": 2090,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2067,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2055,
									"end": 2067,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2091,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2125,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2111,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2101,
									"end": 2125,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2125,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2125,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2125,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2172,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2135,
									"end": 2172,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2172,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2172,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2172,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1154,
									"end": 1155,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2231,
									"end": 2254,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2231,
									"end": 2258,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2231,
									"end": 2258,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2258,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2258,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2231,
									"end": 2283,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1204,
									"end": 1211,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "93A80"
								},
								{
									"begin": 2293,
									"end": 2316,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2293,
									"end": 2320,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2293,
									"end": 2320,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2293,
									"end": 2320,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2320,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2345,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1261,
									"end": 1268,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "127500"
								},
								{
									"begin": 2355,
									"end": 2378,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2355,
									"end": 2382,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2355,
									"end": 2382,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2382,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2382,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2408,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1312,
									"end": 1319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4F1A00"
								},
								{
									"begin": 2418,
									"end": 2441,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2418,
									"end": 2445,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2418,
									"end": 2445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2445,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2445,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2465,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1943,
									"end": 2472,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10871,
									"end": 10875,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10894,
									"end": 10926,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 10899,
									"end": 10902,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10899,
									"end": 10909,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10899,
									"end": 10909,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 10919,
									"end": 10924,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 10911,
									"end": 10925,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 10911,
									"end": 10925,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 10894,
									"end": 10898,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 10894,
									"end": 10898,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 10894,
									"end": 10898,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 10894,
									"end": 10926,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 10894,
									"end": 10926,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 10894,
									"end": 10926,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 10894,
									"end": 10926,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 10894,
									"end": 10926,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 10887,
									"end": 10926,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 10887,
									"end": 10926,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10804,
									"end": 10933,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 10804,
									"end": 10933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 2335,
									"end": 2338,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2340,
									"end": 2345,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 2325,
									"end": 2334,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2325,
									"end": 2334,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2346,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2325,
									"end": 2346,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2346,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 2325,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2365,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2373,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2385,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2547,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2555,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2544,
									"end": 2555,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2534,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2520,
									"end": 2534,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2535,
									"end": 2540,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2520,
									"end": 2541,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2587,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2576,
									"end": 2587,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2320,
									"end": 2641,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2625,
									"end": 2630,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2618,
									"end": 2630,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2618,
									"end": 2630,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4337,
									"end": 4341,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4385,
									"end": 4386,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4363,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4360,
									"end": 4374,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4375,
									"end": 4380,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4381,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4386,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4386,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4386,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4386,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4264,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 5053,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b50b332a767a046f2a6170a2d6d0c25fe2ee8f33e7636e1edc7bcdf0d563aa6c64736f6c63430008140033",
									".code": [
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "7B0A47EE"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "B88A802F"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "B88A802F"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "D82E3962"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "F8077FAE"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "7B0A47EE"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "817B1CD2"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "1460FA87"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "2C42B233"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "72F702F3"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "7B0472F0"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 801,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 801,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 856,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 856,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3377,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3377,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 737,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2686,
											"end": 3237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 915,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 915,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 769,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 769,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3817,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4822,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4822,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 972,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 972,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 801,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 856,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3461,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3443,
											"end": 3495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3443,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3518,
											"end": 3528,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3505,
											"end": 3529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3505,
											"end": 3529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3565,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3540,
											"end": 3576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3586,
											"end": 3597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3586,
											"end": 3607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3638,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3639,
											"end": 3649,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3617,
											"end": 3658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3617,
											"end": 3658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3694,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3696,
											"end": 3702,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3674,
											"end": 3703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3703,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 737,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 763,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 737,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2790,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2772,
											"end": 2824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2772,
											"end": 2824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2875,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2842,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2842,
											"end": 2874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2842,
											"end": 2889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2834,
											"end": 2916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2948,
											"end": 2958,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2935,
											"end": 2959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2935,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 2990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3004,
											"end": 3014,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3028,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2978,
											"end": 3038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2978,
											"end": 3038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3073,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3048,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3094,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3094,
											"end": 3115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3173,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3155,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3206,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 3208,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3229,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3189,
											"end": 3230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3230,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 3237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 915,
											"end": 940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 769,
											"end": 795,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3817,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3872,
											"end": 3896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3885,
											"end": 3895,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3872,
											"end": 3896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3939,
											"end": 3949,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3923,
											"end": 3950,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3923,
											"end": 3950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3906,
											"end": 3950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3975,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 4095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3961,
											"end": 4095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4003,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4013,
											"end": 4023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3991,
											"end": 4032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3991,
											"end": 4032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4075,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 4077,
											"end": 4083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4051,
											"end": 4084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4084,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 4095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3961,
											"end": 4095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 4101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4885,
											"end": 4892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4944,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4929,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4929,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5034,
											"end": 5044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5013,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5014,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4991,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4991,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4991,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 5051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 3,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4239,
											"end": 4661,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4239,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4395,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4659,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4354,
											"end": 4659,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4469,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4450,
											"end": 4469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4432,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4432,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4527,
											"end": 4537,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4496,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4496,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4496,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4496,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4573,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4574,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4595,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4548,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4548,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4652,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4634,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4615,
											"end": 4652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4652,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4659,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4354,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11394,
											"end": 11398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11427,
											"end": 11437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11427,
											"end": 11437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11452,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11439,
											"end": 11453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11453,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 11417,
											"end": 11454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11417,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3263,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3536,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3730,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3612,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3717,
											"end": 3722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3699,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3723,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3699,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3880,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3951,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3880,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4318,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4139,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4310,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4551,
											"end": 4553,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 4487,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4487,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4652,
											"end": 4655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 4563,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4563,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4665,
											"end": 4684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4862,
											"end": 4866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4913,
											"end": 4960,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5103,
											"end": 5107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4977,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4977,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 5115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5301,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5121,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5166,
											"end": 5167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5263,
											"end": 5264,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5256,
											"end": 5271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5290,
											"end": 5294,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5287,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5295,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5367,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5401,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5401,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5421,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5396,
											"end": 5421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5442,
											"end": 5443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5447,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5471,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5457,
											"end": 5494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 5474,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5494,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5457,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5679,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5679,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5828,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5760,
											"end": 5832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5832,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5760,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5845,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 5886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5928,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5929,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 5929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6057,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5941,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6011,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6032,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6011,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6033,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5991,
											"end": 6051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6051,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5991,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 6057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6155,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6188,
											"end": 6193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6164,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6194,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6164,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6308,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6297,
											"end": 6320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6325,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6290,
											"end": 6409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6328,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6328,
											"end": 6407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6407,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6328,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6290,
											"end": 6409,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6290,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6526,
											"end": 6533,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6473,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6534,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6473,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6463,
											"end": 6534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6557,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964207374616B696E6720706572696F6400000000000000000000"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7101,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 6735,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6957,
											"end": 6960,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6898,
											"end": 6965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6965,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6898,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6965,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7063,
											"end": 7066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6974,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7067,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 6974,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7076,
											"end": 7095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7076,
											"end": 7095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 7101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7526,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7107,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7300,
											"end": 7309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7346,
											"end": 7347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7514,
											"end": 7518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7388,
											"end": 7519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7519,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7388,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7380,
											"end": 7519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7380,
											"end": 7519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7708,
											"end": 7717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7785,
											"end": 7802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7782,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7732,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7803,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 7732,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7813,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7963,
											"end": 7965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 7966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7895,
											"end": 7967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7967,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7895,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8039,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8039,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8091,
											"end": 8092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8073,
											"end": 8093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8102,
											"end": 8118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8102,
											"end": 8118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8137,
											"end": 8140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8141,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8164,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8128,
											"end": 8164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8144,
											"end": 8162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8164,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8128,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8338,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8349,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8349,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8498,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8487,
											"end": 8496,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8430,
											"end": 8502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8502,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 8430,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8578,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 8630,
											"end": 8631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8612,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 8612,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8632,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8669,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8707,
											"end": 8718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8689,
											"end": 8719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8719,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8689,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8859,
											"end": 8866,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 8871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8830,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8885,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8779,
											"end": 8918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8898,
											"end": 8916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8918,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8779,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"contracts/Stake.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(address)": "d82e3962",
							"claimReward()": "b88a802f",
							"lastRewardTimestamp()": "f8077fae",
							"lastStakeTimestamp(address)": "2c42b233",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"stake(uint256,uint256)": "7b0472f0",
							"stakedBalances(address)": "1460fa87",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastStakeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A smart contract for staking tokens with flexible or fixed staking periodsUsers can stake tokens, withdraw, and claim rewards based on the staking duration\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateReward(address)\":{\"details\":\"Function to calculate the pending reward for a user\",\"params\":{\"account\":\"User's address\"},\"returns\":{\"_0\":\"Pending reward amount\"}},\"claimReward()\":{\"details\":\"Function to allow users to claim rewards based on their staking duration\"},\"constructor\":{\"details\":\"Constructor to initialize the StakingPool contract\",\"params\":{\"_initialOwner\":\"Address of the initial owner (used by Ownable)\",\"_rewardRate\":\"Reward rate per second for staking\",\"_stakingToken\":\"Address of the staking token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256,uint256)\":{\"details\":\"Function to allow users to stake tokens with a specific staking period\",\"params\":{\"amount\":\"Amount of tokens to stake\",\"stakingPeriod\":\"Desired staking period identifier\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Function to allow users to withdraw their staked tokens\",\"params\":{\"amount\":\"Amount of tokens to withdraw\"}}},\"title\":\"StakingPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stake.sol\":\"StakingPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xb56bff94b500e76832c09a320f2096dcbebbc6f0cd9e6d4eb3febe5a832b96dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69767c1207853fd65a3695375618e05b9bb12f49123b6ddb471f3ba6de9875b0\",\"dweb:/ipfs/QmNsRCx1Qgo6VGfLDAojRbiF1hfjQZ776JuMowHf46kgkX\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"contracts/Stake.sol\":{\"keccak256\":\"0x79aae97919faabf7aaba394975cd62d0c33201eb4cd1cd705b9a8b025f51881e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d5e5a6be11a30542937d89077365dd6495b1e41c3ea621847887a95bb91199\",\"dweb:/ipfs/Qmc1maGxGUEvx8QHJhRLDHW8Mya26B6fixzC9wna1385M8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1126,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 1128,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "stakedBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1136,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "lastStakeTimestamp",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1138,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "rewardRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1140,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "lastRewardTimestamp",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "contracts/Stake.sol:StakingPool",
								"label": "supportedStakingPeriods",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(UintSet)974_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Set)502_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 497,
										"contract": "contracts/Stake.sol:StakingPool",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 501,
										"contract": "contracts/Stake.sol:StakingPool",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintSet)974_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.UintSet",
								"members": [
									{
										"astId": 973,
										"contract": "contracts/Stake.sol:StakingPool",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)502_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Stake.sol:111:23:\n    |\n111 | function updateReward(address account) internal {\n    |                       ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4276,
					"file": "contracts/Stake.sol",
					"start": 4261
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 261,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1674:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1720:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1763:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:3",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 269,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:3"
									},
									"src": "1850:37:3"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1907:38:3",
										"statements": [
											{
												"expression": {
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 273,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1927:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:3"
											}
										]
									},
									"id": 277,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:3"
									},
									"scope": 324,
									"src": "1893:52:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2346:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 280,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2356:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:3"
											},
											{
												"id": 283,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2398:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:3"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 288,
									"name": "nonReentrant",
									"nameLocation": "2331:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:3"
									},
									"src": "2322:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2470:268:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 291,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2558:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 292,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2569:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "2554:86:3",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "2578:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 294,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "2599:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 296,
															"nodeType": "RevertStatement",
															"src": "2592:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2714:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2724:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:3"
											}
										]
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:3"
									},
									"scope": 324,
									"src": "2431:307:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2782:170:3",
										"statements": [
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2924:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2934:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:3"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:3"
									},
									"scope": 324,
									"src": "2744:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "3195:42:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3212:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 319,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3223:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 317,
												"id": 321,
												"nodeType": "Return",
												"src": "3205:25:3"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "3189:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:3"
									},
									"scope": 324,
									"src": "3131:106:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 325,
							"src": "886:2353:3",
							"usedErrors": [
								269
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "58:89:4",
								"text": " @title SafeMath\n @dev Math operations with safety checks that throw on error"
							},
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491
							],
							"name": "SafeMath",
							"nameLocation": "156:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "310:172:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "324:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "329:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "324:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "320:45:4",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "332:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "353:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 336,
															"id": 341,
															"nodeType": "Return",
															"src": "346:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "382:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "374:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 346,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "386:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 347,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "390:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "374:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "409:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 352,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "413:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "409:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "418:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "409:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "421:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "401:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "401:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "401:56:4"
											},
											{
												"expression": {
													"id": 359,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 345,
													"src": "474:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 360,
												"nodeType": "Return",
												"src": "467:8:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "171:67:4",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "252:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "264:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "256:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "275:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "267:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:22:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "301:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:9:4"
									},
									"scope": 491,
									"src": "243:239:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "641:106:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "659:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "663:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "659:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "666:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "651:44:4"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "713:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "705:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "705:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 381,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "717:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 382,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "721:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "717:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "705:17:4"
											},
											{
												"expression": {
													"id": 385,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "739:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 371,
												"id": 386,
												"nodeType": "Return",
												"src": "732:8:4"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "488:81:4",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "583:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "595:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "587:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "606:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "598:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:22:4"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "632:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:9:4"
									},
									"scope": 491,
									"src": "574:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "937:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "955:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 400,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "960:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "955:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "963:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "947:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "947:49:4"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1014:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "1006:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1006:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "1018:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 408,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1022:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1018:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1006:17:4"
											},
											{
												"expression": {
													"id": 411,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 406,
													"src": "1040:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 397,
												"id": 412,
												"nodeType": "Return",
												"src": "1033:8:4"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "753:112:4",
										"text": " @dev Subtracts two numbers, throws on overflow (i.e., if subtrahend is greater than minuend)."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "879:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "891:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "883:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "902:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "894:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:22:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "928:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:9:4"
									},
									"scope": 491,
									"src": "870:178:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "1187:108:4",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1205:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "1197:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1197:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 426,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1209:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 427,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "1213:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1209:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1197:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1232:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 432,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "1237:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1232:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1224:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1224:46:4"
											},
											{
												"expression": {
													"id": 437,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "1287:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 438,
												"nodeType": "Return",
												"src": "1280:8:4"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1054:61:4",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1129:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1141:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1133:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1152:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1144:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:22:4"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1178:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:4"
									},
									"scope": 491,
									"src": "1120:175:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "1530:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 453,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "1548:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1552:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1548:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 456,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "1555:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1540:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1540:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "1540:28:4"
											},
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1586:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "1578:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1578:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 461,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1590:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 462,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1594:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1590:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1578:17:4"
											},
											{
												"expression": {
													"id": 465,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "1612:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 466,
												"nodeType": "Return",
												"src": "1605:8:4"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "1301:119:4",
										"text": " @dev Returns the integer division of two numbers, reverting with custom message on division by zero."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRevertZero",
									"nameLocation": "1434:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1456:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1448:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1467:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1459:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1484:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1470:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1470:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:50:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1521:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:9:4"
									},
									"scope": 491,
									"src": "1425:195:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1768:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1791:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1786:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1778:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "1778:43:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1838:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 486,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1842:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 477,
												"id": 488,
												"nodeType": "Return",
												"src": "1831:12:4"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1626:70:4",
										"text": " @dev Returns the remainder of dividing two numbers."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1710:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1722:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1714:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1733:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1725:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:22:4"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1759:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:9:4"
									},
									"scope": 491,
									"src": "1701:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 492,
							"src": "148:1704:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1104
						]
					},
					"id": 1105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 494,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1104,
							"linearizedBaseContracts": [
								1104
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 502,
									"members": [
										{
											"constant": false,
											"id": 497,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 502,
											"src": "1852:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 496,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 501,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 502,
											"src": "2020:44:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 500,
												"keyName": "value",
												"keyNameLocation": "2036:5:5",
												"keyType": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:5",
									"nodeType": "StructDefinition",
									"scope": 1104,
									"src": "1798:273:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2310:337:5",
										"statements": [
											{
												"condition": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 514,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2335:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 515,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "2340:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 513,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "2325:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "2604:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 512,
															"id": 540,
															"nodeType": "Return",
															"src": "2618:12:5"
														}
													]
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "2320:321:5",
												"trueBody": {
													"id": 538,
													"nodeType": "Block",
													"src": "2348:250:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2379:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 518,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2362:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "2362:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:5",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:5"
														},
														{
															"expression": {
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 526,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2520:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 501,
																		"src": "2520:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 530,
																	"indexExpression": {
																		"id": 528,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2535:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 531,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2544:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "2544:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 535,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 512,
															"id": 537,
															"nodeType": "Return",
															"src": "2576:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2255:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 505,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 504,
														"name": "Set",
														"nameLocations": [
															"2255:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "2255:3:5"
													},
													"referencedDeclaration": 502,
													"src": "2255:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2272:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:5"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2304:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:5"
									},
									"scope": 1104,
									"src": "2241:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "2887:1296:5",
										"statements": [
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "2991:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 555,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 557,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3010:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:5",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 501,
														"src": "3010:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 560,
													"indexExpression": {
														"id": 559,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "3025:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3046:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "4140:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 554,
															"id": 624,
															"nodeType": "Return",
															"src": "4154:12:5"
														}
													]
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "3042:1135:5",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "3061:1073:5",
													"statements": [
														{
															"assignments": [
																566
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 566,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 622,
																	"src": "3413:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 565,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 570,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 567,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "3434:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:5"
														},
														{
															"assignments": [
																572
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 572,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 622,
																	"src": "3460:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 578,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 573,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "3480:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "3480:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 579,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "3521:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 580,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "3535:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 606,
															"nodeType": "IfStatement",
															"src": "3517:378:5",
															"trueBody": {
																"id": 605,
																"nodeType": "Block",
																"src": "3546:349:5",
																"statements": [
																	{
																		"assignments": [
																			583
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 583,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 605,
																				"src": "3564:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 582,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 588,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 584,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 548,
																					"src": "3584:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 585,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:5",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 497,
																				"src": "3584:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 587,
																			"indexExpression": {
																				"id": 586,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "3596:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:5"
																	},
																	{
																		"expression": {
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 589,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "3705:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 592,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:5",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 497,
																					"src": "3705:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 593,
																				"indexExpression": {
																					"id": 591,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "3717:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 594,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "3731:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 596,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:5"
																	},
																	{
																		"expression": {
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 597,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "3844:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 600,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:5",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 501,
																					"src": "3844:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 601,
																				"indexExpression": {
																					"id": 599,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "3859:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 602,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "3872:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 604,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 607,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "3973:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "3973:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:5",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:5"
														},
														{
															"expression": {
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 614,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "4076:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 501,
																		"src": "4076:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 617,
																	"indexExpression": {
																		"id": 616,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4091:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 554,
															"id": 621,
															"nodeType": "Return",
															"src": "4112:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2832:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "Set",
														"nameLocations": [
															"2832:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "2832:3:5"
													},
													"referencedDeclaration": 502,
													"src": "2832:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:5"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2881:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:5"
									},
									"scope": 1104,
									"src": "2815:1368:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "4343:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 639,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "4360:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:5",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 501,
															"src": "4360:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 642,
														"indexExpression": {
															"id": 641,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4375:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 638,
												"id": 645,
												"nodeType": "Return",
												"src": "4353:33:5"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4283:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "Set",
														"nameLocations": [
															"4283:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "4283:3:5"
													},
													"referencedDeclaration": 502,
													"src": "4283:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4300:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:5"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "4337:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:5"
									},
									"scope": 1104,
									"src": "4264:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "4539:42:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 656,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4556:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "4556:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 659,
												"nodeType": "Return",
												"src": "4549:25:5"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "4491:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 649,
														"name": "Set",
														"nameLocations": [
															"4491:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "4491:3:5"
													},
													"referencedDeclaration": 502,
													"src": "4491:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:5"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "4530:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:5"
									},
									"scope": 1104,
									"src": "4474:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "4999:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 672,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5016:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "5016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 675,
													"indexExpression": {
														"id": 674,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5028:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 671,
												"id": 676,
												"nodeType": "Return",
												"src": "5009:25:5"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "4936:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "Set",
														"nameLocations": [
															"4936:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "4936:3:5"
													},
													"referencedDeclaration": 502,
													"src": "4936:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "4953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:5"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "4990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:5"
									},
									"scope": 1104,
									"src": "4923:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "5655:35:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 688,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "5672:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:5",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 497,
													"src": "5672:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 687,
												"id": 690,
												"nodeType": "Return",
												"src": "5665:18:5"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "5598:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 680,
														"name": "Set",
														"nameLocations": [
															"5598:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 502,
														"src": "5598:3:5"
													},
													"referencedDeclaration": 502,
													"src": "5598:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "5637:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 684,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 685,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:5"
									},
									"scope": 1104,
									"src": "5581:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 696,
									"members": [
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 696,
											"src": "5743:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 694,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 693,
													"name": "Set",
													"nameLocations": [
														"5743:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 502,
													"src": "5743:3:5"
												},
												"referencedDeclaration": 502,
												"src": "5743:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:5",
									"nodeType": "StructDefinition",
									"scope": 1104,
									"src": "5715:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6006:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "6028:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "6028:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "6040:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 707,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "6023:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 706,
												"id": 712,
												"nodeType": "Return",
												"src": "6016:30:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5943:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "5943:10:5"
													},
													"referencedDeclaration": 696,
													"src": "5943:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6000:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:5"
									},
									"scope": 1104,
									"src": "5930:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "6300:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 726,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "6325:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "6325:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 728,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6337:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 725,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "6317:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 724,
												"id": 730,
												"nodeType": "Return",
												"src": "6310:33:5"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6237:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "6237:10:5"
													},
													"referencedDeclaration": 696,
													"src": "6237:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6261:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:5"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "6294:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:5"
									},
									"scope": 1104,
									"src": "6221:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "6517:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 744,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "6544:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "6544:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 746,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6556:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 743,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "6534:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 748,
												"nodeType": "Return",
												"src": "6527:35:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6449:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "6449:10:5"
													},
													"referencedDeclaration": 696,
													"src": "6449:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6473:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "6511:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:5"
									},
									"scope": 1104,
									"src": "6431:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "6722:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 760,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "6747:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "6747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 759,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 763,
												"nodeType": "Return",
												"src": "6732:26:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6666:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 753,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 752,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "6666:10:5"
													},
													"referencedDeclaration": 696,
													"src": "6666:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:5"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6713:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:5"
									},
									"scope": 1104,
									"src": "6650:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "7190:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 777,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "7211:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "7211:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 779,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7223:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 776,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "7207:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 775,
												"id": 781,
												"nodeType": "Return",
												"src": "7200:29:5"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "7119:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 767,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "7119:10:5"
													},
													"referencedDeclaration": 696,
													"src": "7119:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "7143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "7181:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 773,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:5"
									},
									"scope": 1104,
									"src": "7107:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "7857:219:5",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "7867:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 795,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 796,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 799,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "7900:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 695,
															"src": "7900:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 798,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "7892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:5"
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "7921:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 805,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 806,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8007:39:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8031:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 807,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:5",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:5",
														"valueSize": 1
													}
												],
												"id": 809,
												"nodeType": "InlineAssembly",
												"src": "7998:48:5"
											},
											{
												"expression": {
													"id": 810,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "8063:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 792,
												"id": 811,
												"nodeType": "Return",
												"src": "8056:13:5"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "7792:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 785,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "7792:10:5"
													},
													"referencedDeclaration": 696,
													"src": "7792:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$696_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:5"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "7839:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 789,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 790,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:5"
									},
									"scope": 1104,
									"src": "7776:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 817,
									"members": [
										{
											"constant": false,
											"id": 816,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 817,
											"src": "8129:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 815,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 814,
													"name": "Set",
													"nameLocations": [
														"8129:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 502,
													"src": "8129:3:5"
												},
												"referencedDeclaration": 502,
												"src": "8129:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:5",
									"nodeType": "StructDefinition",
									"scope": 1104,
									"src": "8101:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "8392:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 829,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "8414:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 816,
															"src": "8414:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 837,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "8450:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 835,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 833,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 831,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 828,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "8409:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 827,
												"id": 842,
												"nodeType": "Return",
												"src": "8402:57:5"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "8329:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 819,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "8329:10:5"
													},
													"referencedDeclaration": 817,
													"src": "8329:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "8353:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "8386:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:5"
									},
									"scope": 1104,
									"src": "8316:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "8713:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 856,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8738:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 857,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 816,
															"src": "8738:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 864,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 850,
																					"src": "8774:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 862,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 860,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 858,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 855,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "8730:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 854,
												"id": 869,
												"nodeType": "Return",
												"src": "8723:60:5"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "8650:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 846,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "8650:10:5"
													},
													"referencedDeclaration": 817,
													"src": "8650:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "8674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:5"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "8707:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:5"
									},
									"scope": 1104,
									"src": "8634:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "8957:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 883,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "8984:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 816,
															"src": "8984:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 891,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "9020:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 889,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 887,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 885,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 882,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "8974:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 881,
												"id": 896,
												"nodeType": "Return",
												"src": "8967:62:5"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8889:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 873,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "8889:10:5"
													},
													"referencedDeclaration": 817,
													"src": "8889:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8913:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:5"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8951:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:5"
									},
									"scope": 1104,
									"src": "8871:165:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "9189:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 908,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "9214:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 816,
															"src": "9214:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 907,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "9206:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 906,
												"id": 911,
												"nodeType": "Return",
												"src": "9199:26:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "9133:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 900,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "9133:10:5"
													},
													"referencedDeclaration": 817,
													"src": "9133:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:5"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "9180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:5"
									},
									"scope": 1104,
									"src": "9117:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "9657:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 931,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 917,
																						"src": "9702:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 932,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:5",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 816,
																					"src": "9702:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$502_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 933,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 919,
																					"src": "9714:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$502_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 930,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "9698:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 928,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 926,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 924,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 923,
												"id": 938,
												"nodeType": "Return",
												"src": "9667:56:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "9586:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 915,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "9586:10:5"
													},
													"referencedDeclaration": 817,
													"src": "9586:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "9610:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "9648:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:5"
									},
									"scope": 1104,
									"src": "9574:156:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "10351:219:5",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "10361:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 952,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 953,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 956,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "10394:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 816,
															"src": "10394:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 955,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "10386:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:5"
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "10415:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 963,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10501:39:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10515:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10525:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:5",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:5",
														"valueSize": 1
													}
												],
												"id": 966,
												"nodeType": "InlineAssembly",
												"src": "10492:48:5"
											},
											{
												"expression": {
													"id": 967,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "10557:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 968,
												"nodeType": "Return",
												"src": "10550:13:5"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "10286:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 817,
														"src": "10286:10:5"
													},
													"referencedDeclaration": 817,
													"src": "10286:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$817_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "10333:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:5"
									},
									"scope": 1104,
									"src": "10270:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 974,
									"members": [
										{
											"constant": false,
											"id": 973,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 974,
											"src": "10617:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 972,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 971,
													"name": "Set",
													"nameLocations": [
														"10617:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 502,
													"src": "10617:3:5"
												},
												"referencedDeclaration": 502,
												"src": "10617:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$502_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:5",
									"nodeType": "StructDefinition",
									"scope": 1104,
									"src": "10592:42:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "10877:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 986,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "10899:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 973,
															"src": "10899:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "10919:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 988,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 985,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "10894:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 984,
												"id": 993,
												"nodeType": "Return",
												"src": "10887:39:5"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "10817:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 977,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 976,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "10817:7:5"
													},
													"referencedDeclaration": 974,
													"src": "10817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "10838:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "10871:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:5"
									},
									"scope": 1104,
									"src": "10804:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "11177:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1007,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "11202:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 973,
															"src": "11202:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "11222:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1006,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "11194:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1014,
												"nodeType": "Return",
												"src": "11187:42:5"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11117:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 997,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "11117:7:5"
													},
													"referencedDeclaration": 974,
													"src": "11117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11138:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11171:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:5"
									},
									"scope": 1104,
									"src": "11101:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "11400:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1028,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "11427:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 973,
															"src": "11427:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "11447:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1027,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "11417:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1035,
												"nodeType": "Return",
												"src": "11410:44:5"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11335:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "11335:7:5"
													},
													"referencedDeclaration": 974,
													"src": "11335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11356:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "11394:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:5"
									},
									"scope": 1104,
									"src": "11317:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "11611:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1047,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "11636:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 973,
															"src": "11636:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1046,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "11628:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1050,
												"nodeType": "Return",
												"src": "11621:26:5"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "11558:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "11558:7:5"
													},
													"referencedDeclaration": 974,
													"src": "11558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "11602:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:5"
									},
									"scope": 1104,
									"src": "11542:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "12076:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1066,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "12105:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:5",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 973,
																	"src": "12105:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$502_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1068,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "12117:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$502_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1065,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "12101:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1071,
												"nodeType": "Return",
												"src": "12086:38:5"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "12008:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "12008:7:5"
													},
													"referencedDeclaration": 974,
													"src": "12008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "12029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "12067:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:5"
									},
									"scope": 1104,
									"src": "11996:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "12749:219:5",
										"statements": [
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "12759:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1085,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1086,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1089,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "12792:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 973,
															"src": "12792:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$502_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1088,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "12784:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$502_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:5"
											},
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "12813:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1095,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1096,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12899:39:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12913:15:5",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12923:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1097,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1087,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:5",
														"valueSize": 1
													}
												],
												"id": 1099,
												"nodeType": "InlineAssembly",
												"src": "12890:48:5"
											},
											{
												"expression": {
													"id": 1100,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "12955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1101,
												"nodeType": "Return",
												"src": "12948:13:5"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "12687:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 974,
														"src": "12687:7:5"
													},
													"referencedDeclaration": 974,
													"src": "12687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "12731:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1079,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1080,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:5"
									},
									"scope": 1104,
									"src": "12671:297:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1105,
							"src": "1330:11640:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:5"
				},
				"id": 5
			},
			"contracts/Stake.sol": {
				"ast": {
					"absolutePath": "contracts/Stake.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"EnumerableSet": [
							1104
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							324
						],
						"SafeMath": [
							491
						],
						"StakingPool": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1106,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 226,
							"src": "66:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 148,
							"src": "123:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 1105,
							"src": "176:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 325,
							"src": "242:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 492,
							"src": "302:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "Ownable",
										"nameLocations": [
											"589:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "589:7:6"
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "589:7:6"
								},
								{
									"baseName": {
										"id": 1115,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"598:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "598:15:6"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "598:15:6"
								}
							],
							"canonicalName": "StakingPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1112,
								"nodeType": "StructuredDocumentation",
								"src": "362:202:6",
								"text": " @title StakingPool\n @dev A smart contract for staking tokens with flexible or fixed staking periods\n @dev Users can stake tokens, withdraw, and claim rewards based on the staking duration"
							},
							"fullyImplemented": true,
							"id": 1453,
							"linearizedBaseContracts": [
								1453,
								324,
								147,
								255
							],
							"name": "StakingPool",
							"nameLocation": "574:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1119,
									"libraryName": {
										"id": 1117,
										"name": "SafeMath",
										"nameLocations": [
											"626:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 491,
										"src": "626:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "620:27:6",
									"typeName": {
										"id": 1118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1123,
									"libraryName": {
										"id": 1120,
										"name": "EnumerableSet",
										"nameLocations": [
											"658:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1104,
										"src": "658:13:6"
									},
									"nodeType": "UsingForDirective",
									"src": "652:46:6",
									"typeName": {
										"id": 1122,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1121,
											"name": "EnumerableSet.UintSet",
											"nameLocations": [
												"676:13:6",
												"690:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 974,
											"src": "676:21:6"
										},
										"referencedDeclaration": 974,
										"src": "676:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
											"typeString": "struct EnumerableSet.UintSet"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1126,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "751:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "737:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1125,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1124,
											"name": "IERC20",
											"nameLocations": [
												"737:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "737:6:6"
										},
										"referencedDeclaration": 225,
										"src": "737:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1128,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "784:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "769:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "769:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1460fa87",
									"id": 1132,
									"mutability": "mutable",
									"name": "stakedBalances",
									"nameLocation": "836:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "801:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1131,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "809:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "801:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1130,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "820:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c42b233",
									"id": 1136,
									"mutability": "mutable",
									"name": "lastStakeTimestamp",
									"nameLocation": "891:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "856:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1135,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1133,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "864:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "856:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1134,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "875:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1138,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "930:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "915:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "915:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8077fae",
									"id": 1140,
									"mutability": "mutable",
									"name": "lastRewardTimestamp",
									"nameLocation": "987:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "972:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "972:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1143,
									"mutability": "constant",
									"name": "FLEXIBLE_STAKING_PERIOD",
									"nameLocation": "1128:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1111:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1111:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1154:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1146,
									"mutability": "constant",
									"name": "ONE_WEEK_STAKING_PERIOD",
									"nameLocation": "1178:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1161:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1161:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1204:7:6",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1149,
									"mutability": "constant",
									"name": "TWO_WEEKS_STAKING_PERIOD",
									"nameLocation": "1234:24:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1217:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1217:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1261:7:6",
										"subdenomination": "weeks",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1209600_by_1",
											"typeString": "int_const 1209600"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1152,
									"mutability": "constant",
									"name": "MAX_STAKING_PERIOD",
									"nameLocation": "1291:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1274:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1274:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1312:7:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5184000_by_1",
											"typeString": "int_const 5184000"
										},
										"value": "60"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1155,
									"mutability": "mutable",
									"name": "supportedStakingPeriods",
									"nameLocation": "1396:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1453,
									"src": "1366:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintSet_$974_storage",
										"typeString": "struct EnumerableSet.UintSet"
									},
									"typeName": {
										"id": 1154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1153,
											"name": "EnumerableSet.UintSet",
											"nameLocations": [
												"1366:13:6",
												"1380:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 974,
											"src": "1366:21:6"
										},
										"referencedDeclaration": 974,
										"src": "1366:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintSet_$974_storage_ptr",
											"typeString": "struct EnumerableSet.UintSet"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 1163,
									"name": "Staked",
									"nameLocation": "1475:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1498:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1482:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1512:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1504:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingPeriod",
												"nameLocation": "1528:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1520:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:61:6"
									},
									"src": "1469:74:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1169,
									"name": "Withdrawn",
									"nameLocation": "1554:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1580:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1564:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1594:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1586:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:38:6"
									},
									"src": "1548:54:6"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1175,
									"name": "RewardClaimed",
									"nameLocation": "1613:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1643:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1627:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1657:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1649:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:38:6"
									},
									"src": "1607:58:6"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2045:427:6",
										"statements": [
											{
												"expression": {
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "2055:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1190,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "2077:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1189,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2070:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2070:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "2055:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "2055:36:6"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2101:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1195,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2114:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2101:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2101:24:6"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "lastRewardTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2135:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1199,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2157:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2163:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2157:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2135:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "2135:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "FLEXIBLE_STAKING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2259:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1203,
															"name": "supportedStakingPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2231:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintSet_$974_storage",
																"typeString": "struct EnumerableSet.UintSet storage ref"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2255:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "2231:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$974_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$974_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2231:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2231:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1212,
															"name": "ONE_WEEK_STAKING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "2321:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1209,
															"name": "supportedStakingPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2293:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintSet_$974_storage",
																"typeString": "struct EnumerableSet.UintSet storage ref"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2317:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "2293:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$974_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$974_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "2293:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "TWO_WEEKS_STAKING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "2383:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1215,
															"name": "supportedStakingPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2355:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintSet_$974_storage",
																"typeString": "struct EnumerableSet.UintSet storage ref"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "2355:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$974_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$974_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "2355:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1224,
															"name": "MAX_STAKING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "2446:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1221,
															"name": "supportedStakingPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2418:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintSet_$974_storage",
																"typeString": "struct EnumerableSet.UintSet storage ref"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2442:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 995,
														"src": "2418:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$974_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$974_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2418:47:6"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1671:267:6",
										"text": " @dev Constructor to initialize the StakingPool contract\n @param _stakingToken Address of the staking token\n @param _rewardRate Reward rate per second for staking\n @param _initialOwner Address of the initial owner (used by Ownable)"
									},
									"id": 1228,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1185,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1182,
													"src": "2030:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1186,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1184,
												"name": "Ownable",
												"nameLocations": [
													"2022:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2022:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2022:22:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1963:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1955:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "1986:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1978:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2007:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1999:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1954:67:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:6"
									},
									"scope": 1453,
									"src": "1943:529:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2762:475:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "2780:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2789:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2780:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2772:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "2772:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1248,
																	"name": "stakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "2875:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1246,
																	"name": "supportedStakingPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "2842:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintSet_$974_storage",
																		"typeString": "struct EnumerableSet.UintSet storage ref"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2866:8:6",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1037,
																"src": "2842:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$974_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintSet_$974_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2842:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720706572696f64",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
																"typeString": "literal_string \"Invalid staking period\""
															},
															"value": "Invalid staking period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
																"typeString": "literal_string \"Invalid staking period\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2834:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2834:82:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2948:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2952:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2948:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1253,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "2935:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2935:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "2935:24:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3004:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3008:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3004:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1265,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3024:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPool_$1453",
																		"typeString": "contract StakingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPool_$1453",
																		"typeString": "contract StakingPool"
																	}
																],
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3016:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3016:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3016:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3031:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1258,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "2978:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2991:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "2978:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2978:60:6"
											},
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1270,
															"name": "stakedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3048:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1273,
														"indexExpression": {
															"expression": {
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3063:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3067:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3063:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3048:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1274,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3078:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3048:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3048:36:6"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1277,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3094:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1278,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3109:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3094:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "3094:21:6"
											},
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1281,
															"name": "lastStakeTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3125:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1284,
														"indexExpression": {
															"expression": {
																"id": 1282,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3144:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3148:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3144:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3125:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1285,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3158:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3164:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3158:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3125:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3125:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3196:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3200:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3196:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3208:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "stakingPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3216:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3189:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3189:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "EmitStatement",
												"src": "3184:46:6"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "2478:203:6",
										"text": " @dev Function to allow users to stake tokens with a specific staking period\n @param amount Amount of tokens to stake\n @param stakingPeriod Desired staking period identifier"
									},
									"functionSelector": "7b0472f0",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1235,
												"name": "nonReentrant",
												"nameLocations": [
													"2749:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "2749:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2749:12:6"
										}
									],
									"name": "stake",
									"nameLocation": "2695:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2709:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2701:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "stakingPeriod",
												"nameLocation": "2725:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2717:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:39:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:6"
									},
									"scope": 1453,
									"src": "2686:551:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "3433:277:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "3451:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3460:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3451:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3463:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3443:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3443:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "3443:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3518:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3522:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3518:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1312,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3505:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3505:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "3505:24:6"
											},
											{
												"expression": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1317,
															"name": "stakedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "3540:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1320,
														"indexExpression": {
															"expression": {
																"id": 1318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3555:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3559:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3555:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3540:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1321,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "3570:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3540:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "3540:36:6"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1324,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3586:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1325,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "3601:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3586:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "3586:21:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3639:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3643:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3639:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "3651:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1328,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "3617:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3630:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "3617:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "3617:41:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3684:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3688:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3684:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "3696:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1336,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3674:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3674:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "EmitStatement",
												"src": "3669:34:6"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "3243:129:6",
										"text": " @dev Function to allow users to withdraw their staked tokens\n @param amount Amount of tokens to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1302,
												"name": "nonReentrant",
												"nameLocations": [
													"3420:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "3420:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3420:12:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "3386:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3403:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3395:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:16:6"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3433:0:6"
									},
									"scope": 1453,
									"src": "3377:333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "3862:239:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3885:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3889:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3885:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1349,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3872:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3872:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "3872:24:6"
											},
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3914:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1380,
														"src": "3906:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3906:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1357,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3939:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3943:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3939:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1356,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "3923:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3923:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3906:44:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1361,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "3965:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3974:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3965:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "3961:134:6",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "3977:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1367,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4013:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4017:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4013:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1369,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "4025:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1364,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "3991:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4004:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "3991:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3991:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1371,
															"nodeType": "ExpressionStatement",
															"src": "3991:41:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1373,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4065:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4069:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4065:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1375,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "4077:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1372,
																	"name": "RewardClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "4051:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4051:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1377,
															"nodeType": "EmitStatement",
															"src": "4046:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "3716:96:6",
										"text": " @dev Function to allow users to claim rewards based on their staking duration"
									},
									"functionSelector": "b88a802f",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "nonReentrant",
												"nameLocations": [
													"3849:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "3849:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3849:12:6"
										}
									],
									"name": "claimReward",
									"nameLocation": "3826:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:2:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3862:0:6"
									},
									"scope": 1453,
									"src": "3817:284:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "4287:374:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1387,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4358:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4364:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4358:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1389,
														"name": "lastRewardTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "4376:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4358:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "4354:305:6",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "4397:262:6",
													"statements": [
														{
															"assignments": [
																1392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1392,
																	"mutability": "mutable",
																	"name": "elapsedSeconds",
																	"nameLocation": "4415:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "4407:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1391,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4407:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1397,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1393,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4432:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4438:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4432:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1395,
																	"name": "lastRewardTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "4450:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4432:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4407:62:6"
														},
														{
															"assignments": [
																1399
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1399,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "4487:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "4479:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1398,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4479:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1405,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1400,
																		"name": "totalStaked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "4496:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1401,
																		"name": "elapsedSeconds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "4510:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4496:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1403,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "4527:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4496:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4479:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1409,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "4574:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4574:7:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1413,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4591:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingPool_$1453",
																					"typeString": "contract StakingPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingPool_$1453",
																					"typeString": "contract StakingPool"
																				}
																			],
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4583:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1411,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4583:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4583:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1415,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "4598:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1406,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "4548:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4561:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "4548:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4548:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1417,
															"nodeType": "ExpressionStatement",
															"src": "4548:57:6"
														},
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1418,
																	"name": "lastRewardTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "4615:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1419,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4637:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4643:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4637:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4615:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "4615:37:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "4106:132:6",
										"text": " @dev Update the reward for a given account.\n @param account The address of the account for which the reward is updated."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "4248:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4269:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4261:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4260:17:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4287:0:6"
									},
									"scope": 1453,
									"src": "4239:422:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "4894:157:6",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "elapsedSeconds",
														"nameLocation": "4912:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "4904:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4904:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1442,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1436,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4929:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4935:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4929:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1438,
															"name": "lastStakeTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "4947:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1440,
														"indexExpression": {
															"id": 1439,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "4966:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4947:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4929:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4904:70:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1443,
																"name": "stakedBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "4991:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1445,
															"indexExpression": {
																"id": 1444,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "5006:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4991:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1446,
															"name": "elapsedSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "5017:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4991:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1448,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "5034:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4991:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1450,
												"nodeType": "Return",
												"src": "4984:60:6"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "4668:149:6",
										"text": " @dev Function to calculate the pending reward for a user\n @param account User's address\n @return Pending reward amount"
									},
									"functionSelector": "d82e3962",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "4831:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4855:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4847:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:17:6"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4885:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:9:6"
									},
									"scope": 1453,
									"src": "4822:229:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1454,
							"src": "565:4488:6",
							"usedErrors": [
								13,
								18,
								269
							],
							"usedEvents": [
								24,
								1163,
								1169,
								1175
							]
						}
					],
					"src": "32:5022:6"
				},
				"id": 6
			}
		}
	}
}